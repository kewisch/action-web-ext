{"version":3,"file":"is-it-type.js","sources":["../../src/index.js"],"sourcesContent":["/* --------------------\n * is-it-type module\n * Entry point\n * ------------------*/\n\n// Modules\nimport getGlobalThis from 'globalthis';\n\n// Exports\n\n/*\n * Replication of core-util-is methods.\n * https://www.npmjs.com/package/core-util-is\n * NB `isBuffer()` is omitted and `isObject()` is different from `core-util-is`'s implementation\n */\n\nexport const {isArray} = Array;\n\nexport function isBoolean(arg) {\n\treturn isType('boolean', arg);\n}\n\nexport function isNull(arg) {\n\treturn arg === null;\n}\n\nexport function isUndefined(arg) {\n\treturn arg === void 0; // eslint-disable-line no-void\n}\n\nexport function isNullOrUndefined(arg) {\n\treturn arg == null;\n}\n\nexport function isNumber(arg) {\n\treturn isType('number', arg);\n}\n\nexport function isString(arg) {\n\treturn isType('string', arg);\n}\n\nexport function isSymbol(arg) {\n\treturn isType('symbol', arg);\n}\n\nexport function isRegExp(arg) {\n\treturn arg instanceof RegExp;\n}\n\nexport function isDate(arg) {\n\treturn arg instanceof Date;\n}\n\nexport function isError(arg) {\n\treturn arg instanceof Error;\n}\n\nexport function isFunction(arg) {\n\treturn isType('function', arg);\n}\n\nexport function isPrimitive(arg) {\n\tconst type = getType(arg);\n\treturn arg == null\n\t\t|| type === 'boolean'\n\t\t|| type === 'number'\n\t\t|| type === 'string'\n\t\t|| type === 'symbol';\n}\n\n/*\n * Additional methods\n */\n\n// Strings\n\nexport function isEmptyString(arg) {\n\treturn arg === '';\n}\n\nexport function isFullString(arg) {\n\treturn isString(arg) && !isEmptyString(arg);\n}\n\n// Objects\n\nconst {getPrototypeOf} = Object,\n\tObjectPrototype = Object.prototype,\n\tglobalThis = getGlobalThis();\n\nexport function isObject(arg) {\n\tif (!isType('object', arg) || isNull(arg)) return false;\n\n\tlet proto = getPrototypeOf(arg);\n\tif (proto === null || proto === ObjectPrototype) return true;\n\n\twhile (true) { // eslint-disable-line no-constant-condition\n\t\tconst nextProto = getPrototypeOf(proto);\n\t\tif (nextProto === null) return true;\n\t\tif (nextProto === ObjectPrototype) break;\n\t\tproto = nextProto;\n\t}\n\n\treturn isNotNativeProto(proto);\n}\n\nfunction isNotNativeProto(proto) {\n\tlet nativeProtos = [];\n\tfor (const ctorName of [\n\t\t'Function', 'Array', 'Number', 'Boolean', 'String', 'Symbol', 'Date', 'Promise', 'RegExp', 'Error',\n\t\t'ArrayBuffer', 'DataView', 'Map', 'BigInt', 'Set', 'WeakMap', 'WeakSet', 'SharedArrayBuffer',\n\t\t'FinalizationRegistry', 'WeakRef', 'URL', 'URLSearchParams', 'TextEncoder', 'TextDecoder'\n\t]) {\n\t\tconst ctor = globalThis[ctorName];\n\t\tif (ctor) nativeProtos.push(ctor.prototype);\n\t}\n\n\tif (typeof Uint8Array === 'function') nativeProtos.push(getPrototypeOf(Uint8Array.prototype));\n\n\tif (typeof Set === 'function') {\n\t\tnativeProtos = new Set(nativeProtos);\n\t\tisNotNativeProto = p => !nativeProtos.has(p); // eslint-disable-line no-func-assign\n\t} else {\n\t\tisNotNativeProto = p => !nativeProtos.includes(p); // eslint-disable-line no-func-assign\n\t}\n\n\treturn isNotNativeProto(proto);\n}\n\nexport function isEmptyObject(arg) {\n\treturn isObject(arg) && Object.keys(arg).length === 0;\n}\n\n// Numbers\n\nexport function isInteger(arg) {\n\treturn Number.isInteger(arg);\n}\n\nexport function isPositiveInteger(arg) {\n\treturn isInteger(arg) && arg > 0;\n}\n\nexport function isPositiveIntegerOrZero(arg) {\n\treturn isInteger(arg) && arg >= 0;\n}\n\nexport function isNegativeInteger(arg) {\n\treturn isInteger(arg) && arg < 0;\n}\n\nexport function isNegativeIntegerOrZero(arg) {\n\treturn isInteger(arg) && arg <= 0;\n}\n\n// Other\n\nexport function isType(type, arg) {\n\treturn getType(arg) === type;\n}\n\n/*\n * Helpers\n */\n\nfunction getType(arg) {\n\treturn typeof arg;\n}\n"],"names":["isArray","Array","isBoolean","arg","isType","isNull","isUndefined","isNullOrUndefined","isNumber","isString","isSymbol","isRegExp","RegExp","isDate","Date","isError","Error","isFunction","isPrimitive","type","getType","isEmptyString","isFullString","getPrototypeOf","Object","ObjectPrototype","prototype","globalThis","getGlobalThis","isObject","proto","nextProto","isNotNativeProto","nativeProtos","ctorName","ctor","push","Uint8Array","Set","p","has","includes","isEmptyObject","keys","length","isInteger","Number","isPositiveInteger","isPositiveIntegerOrZero","isNegativeInteger","isNegativeIntegerOrZero"],"mappings":"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"}