{"version":3,"file":"is-it-type.min.js","sources":["../../src/index.js"],"sourcesContent":["/* --------------------\n * is-it-type module\n * Entry point\n * ------------------*/\n\n// Modules\nimport getGlobalThis from 'globalthis';\n\n// Exports\n\n/*\n * Replication of core-util-is methods.\n * https://www.npmjs.com/package/core-util-is\n * NB `isBuffer()` is omitted and `isObject()` is different from `core-util-is`'s implementation\n */\n\nexport const {isArray} = Array;\n\nexport function isBoolean(arg) {\n\treturn isType('boolean', arg);\n}\n\nexport function isNull(arg) {\n\treturn arg === null;\n}\n\nexport function isUndefined(arg) {\n\treturn arg === void 0; // eslint-disable-line no-void\n}\n\nexport function isNullOrUndefined(arg) {\n\treturn arg == null;\n}\n\nexport function isNumber(arg) {\n\treturn isType('number', arg);\n}\n\nexport function isString(arg) {\n\treturn isType('string', arg);\n}\n\nexport function isSymbol(arg) {\n\treturn isType('symbol', arg);\n}\n\nexport function isRegExp(arg) {\n\treturn arg instanceof RegExp;\n}\n\nexport function isDate(arg) {\n\treturn arg instanceof Date;\n}\n\nexport function isError(arg) {\n\treturn arg instanceof Error;\n}\n\nexport function isFunction(arg) {\n\treturn isType('function', arg);\n}\n\nexport function isPrimitive(arg) {\n\tconst type = getType(arg);\n\treturn arg == null\n\t\t|| type === 'boolean'\n\t\t|| type === 'number'\n\t\t|| type === 'string'\n\t\t|| type === 'symbol';\n}\n\n/*\n * Additional methods\n */\n\n// Strings\n\nexport function isEmptyString(arg) {\n\treturn arg === '';\n}\n\nexport function isFullString(arg) {\n\treturn isString(arg) && !isEmptyString(arg);\n}\n\n// Objects\n\nconst {getPrototypeOf} = Object,\n\tObjectPrototype = Object.prototype,\n\tglobalThis = getGlobalThis();\n\nexport function isObject(arg) {\n\tif (!isType('object', arg) || isNull(arg)) return false;\n\n\tlet proto = getPrototypeOf(arg);\n\tif (proto === null || proto === ObjectPrototype) return true;\n\n\twhile (true) { // eslint-disable-line no-constant-condition\n\t\tconst nextProto = getPrototypeOf(proto);\n\t\tif (nextProto === null) return true;\n\t\tif (nextProto === ObjectPrototype) break;\n\t\tproto = nextProto;\n\t}\n\n\treturn isNotNativeProto(proto);\n}\n\nfunction isNotNativeProto(proto) {\n\tlet nativeProtos = [];\n\tfor (const ctorName of [\n\t\t'Function', 'Array', 'Number', 'Boolean', 'String', 'Symbol', 'Date', 'Promise', 'RegExp', 'Error',\n\t\t'ArrayBuffer', 'DataView', 'Map', 'BigInt', 'Set', 'WeakMap', 'WeakSet', 'SharedArrayBuffer',\n\t\t'FinalizationRegistry', 'WeakRef', 'URL', 'URLSearchParams', 'TextEncoder', 'TextDecoder'\n\t]) {\n\t\tconst ctor = globalThis[ctorName];\n\t\tif (ctor) nativeProtos.push(ctor.prototype);\n\t}\n\n\tif (typeof Uint8Array === 'function') nativeProtos.push(getPrototypeOf(Uint8Array.prototype));\n\n\tif (typeof Set === 'function') {\n\t\tnativeProtos = new Set(nativeProtos);\n\t\tisNotNativeProto = p => !nativeProtos.has(p); // eslint-disable-line no-func-assign\n\t} else {\n\t\tisNotNativeProto = p => !nativeProtos.includes(p); // eslint-disable-line no-func-assign\n\t}\n\n\treturn isNotNativeProto(proto);\n}\n\nexport function isEmptyObject(arg) {\n\treturn isObject(arg) && Object.keys(arg).length === 0;\n}\n\n// Numbers\n\nexport function isInteger(arg) {\n\treturn Number.isInteger(arg);\n}\n\nexport function isPositiveInteger(arg) {\n\treturn isInteger(arg) && arg > 0;\n}\n\nexport function isPositiveIntegerOrZero(arg) {\n\treturn isInteger(arg) && arg >= 0;\n}\n\nexport function isNegativeInteger(arg) {\n\treturn isInteger(arg) && arg < 0;\n}\n\nexport function isNegativeIntegerOrZero(arg) {\n\treturn isInteger(arg) && arg <= 0;\n}\n\n// Other\n\nexport function isType(type, arg) {\n\treturn getType(arg) === type;\n}\n\n/*\n * Helpers\n */\n\nfunction getType(arg) {\n\treturn typeof arg;\n}\n"],"names":["isArray","Array","isNull","arg","isString","isType","isEmptyString","getPrototypeOf","Object","ObjectPrototype","prototype","globalThis","getGlobalThis","isObject","proto","nextProto","isNotNativeProto","nativeProtos","ctor","push","Uint8Array","Set","p","has","includes","isInteger","Number","type","getType","Date","keys","length","Error","RegExp"],"mappings":"2KAgBcA,EAAWC,MAAXD,QAMP,SAASE,EAAOC,UACP,OAARA,EAeD,SAASC,EAASD,UACjBE,EAAO,SAAUF,GAsClB,SAASG,EAAcH,SACd,KAARA,EASF,IAACI,EAAkBC,OAAlBD,eACNE,EAAkBD,OAAOE,UACzBC,EAAaC,YAEP,SAASC,EAASV,OACnBE,EAAO,SAAUF,IAAQD,EAAOC,GAAM,OAAO,MAE9CW,EAAQP,EAAeJ,MACb,OAAVW,GAAkBA,IAAUL,EAAiB,OAAO,SAE3C,KACNM,EAAYR,EAAeO,MACf,OAAdC,EAAoB,OAAO,KAC3BA,IAAcN,EAAiB,MACnCK,EAAQC,SAGFC,EAAiBF,GAGzB,SAASE,EAAiBF,WACrBG,EAAe,SACI,CACtB,WAAY,QAAS,SAAU,UAAW,SAAU,SAAU,OAAQ,UAAW,SAAU,QAC3F,cAAe,WAAY,MAAO,SAAU,MAAO,UAAW,UAAW,oBACzE,uBAAwB,UAAW,MAAO,kBAAmB,cAAe,8BAC1E,KACIC,EAAOP,QACTO,GAAMD,EAAaE,KAAKD,EAAKR,iBAGR,mBAAfU,YAA2BH,EAAaE,KAAKZ,EAAea,WAAWV,YAE/D,mBAARW,KACVJ,EAAe,IAAII,IAAIJ,GACvBD,EAAmB,SAAAM,UAAML,EAAaM,IAAID,KAE1CN,EAAmB,SAAAM,UAAML,EAAaO,SAASF,IAGzCN,EAAiBF,GASlB,SAASW,EAAUtB,UAClBuB,OAAOD,UAAUtB,GAqBlB,SAASE,EAAOsB,EAAMxB,UACrByB,EAAQzB,KAASwB,EAOzB,SAASC,EAAQzB,iBACFA,sCArJR,SAAmBA,UAClBE,EAAO,UAAWF,mBA+BnB,SAAgBA,UACfA,aAAe0B,4BA+EhB,SAAuB1B,UACtBU,EAASV,IAAoC,IAA5BK,OAAOsB,KAAK3B,GAAK4B,gDA7EnC,SAAiB5B,UAChBA,aAAe6B,4BA0BhB,SAAsB7B,UACrBC,EAASD,KAASG,EAAcH,uBAxBjC,SAAoBA,UACnBE,EAAO,WAAYF,kDAyFpB,SAA2BA,UAC1BsB,EAAUtB,IAAQA,EAAM,mCAGzB,SAAiCA,UAChCsB,EAAUtB,IAAQA,GAAO,8CA3H1B,SAA2BA,UACnB,MAAPA,oBAGD,SAAkBA,UACjBE,EAAO,SAAUF,iDAyGlB,SAA2BA,UAC1BsB,EAAUtB,IAAQA,EAAM,mCAGzB,SAAiCA,UAChCsB,EAAUtB,IAAQA,GAAO,uBAnF1B,SAAqBA,OACrBwB,EAAOC,EAAQzB,UACP,MAAPA,GACM,YAATwB,GACS,WAATA,GACS,WAATA,GACS,WAATA,oBAtBE,SAAkBxB,UACjBA,aAAe8B,4CALhB,SAAkB9B,UACjBE,EAAO,SAAUF,yCAjBlB,SAAqBA,eACZ,IAARA"}