{"version":3,"file":"PseudoProgress.js","names":["PseudoProgress","constructor","_clearInterval","clearInterval","_setInterval","setInterval","preamble","stdout","process","interval","motionCounter","bucket","emptyBucketPointers","setPreamble","addendum","shellWidth","isTTY","Number","columns","bucketSize","length","i","push","animate","animateConfig","conf","speed","bucketIsFull","moveBucket","randomlyFillBucket","finish","fillBucket","write","randomIndex","Math","floor","random","showBucket","isFull","newPointers","forEach","pointer","map","join"],"sources":["../src/PseudoProgress.js"],"sourcesContent":["/**\n * @typedef {{\n *   isTTY: boolean;\n *   columns: number;\n *   write: (buffer: string) => boolean;\n * }} Stdout\n */\n\n/**\n * A pseudo progress indicator.\n *\n * This is just a silly shell animation that was meant to simulate how lots of\n * tests would be run on an add-on file. It sort of looks like a torrent file\n * randomly getting filled in.\n */\nclass PseudoProgress {\n  /**\n   * @typedef {object} PseudoProgressParams\n   * @property {string=} preamble\n   * @property {typeof clearInterval=} _clearInterval\n   * @property {Stdout=} stdout\n   * @property {typeof setInterval=} _setInterval\n   *\n   * @param {PseudoProgressParams} params\n   */\n  constructor({\n    _clearInterval = clearInterval,\n    _setInterval = setInterval,\n    preamble = '',\n    stdout = process.stdout,\n  } = {}) {\n    this.interval = null;\n    this.motionCounter = 1;\n\n    this.setInterval = _setInterval;\n    this.clearInterval = _clearInterval;\n    this.stdout = stdout;\n\n    /** @type {string[]} */\n    this.bucket = [];\n    /** @type {number[]} */\n    this.emptyBucketPointers = [];\n\n    this.setPreamble(preamble);\n  }\n\n  /**\n   * @param {string} preamble\n   */\n  setPreamble(preamble) {\n    this.preamble = `${preamble} [`;\n    this.addendum = ']';\n\n    let shellWidth = 80;\n    if (this.stdout.isTTY) {\n      shellWidth = Number(this.stdout.columns);\n    }\n\n    this.emptyBucketPointers = [];\n    this.bucket = [];\n\n    const bucketSize = shellWidth - this.preamble.length - this.addendum.length;\n    for (let i = 0; i < bucketSize; i++) {\n      this.bucket.push(' ');\n      this.emptyBucketPointers.push(i);\n    }\n  }\n\n  /**\n   * @typedef {object} AnimateConfig\n   * @property {number} speed\n   *\n   * @param {AnimateConfig=} animateConfig\n   */\n  animate(animateConfig) {\n    const conf = {\n      speed: 100,\n      ...animateConfig,\n    };\n    let bucketIsFull = false;\n    this.interval = this.setInterval(() => {\n      if (bucketIsFull) {\n        this.moveBucket();\n      } else {\n        bucketIsFull = this.randomlyFillBucket();\n      }\n    }, conf.speed);\n  }\n\n  finish() {\n    if (this.interval) {\n      this.clearInterval(this.interval);\n    }\n\n    this.fillBucket();\n    // The bucket has already filled to the terminal width at this point\n    // but for copy/paste purposes, add a new line:\n    this.stdout.write('\\n');\n  }\n\n  randomlyFillBucket() {\n    // randomly fill a bucket (the width of the shell) with dots.\n    const randomIndex = Math.floor(\n      Math.random() * this.emptyBucketPointers.length,\n    );\n    this.bucket[this.emptyBucketPointers[randomIndex]] = '.';\n\n    this.showBucket();\n\n    let isFull = true;\n    /** @type {number[]} */\n    const newPointers = [];\n    this.emptyBucketPointers.forEach((pointer) => {\n      if (this.bucket[pointer] === ' ') {\n        isFull = false;\n        newPointers.push(pointer);\n      }\n    });\n    this.emptyBucketPointers = newPointers;\n\n    return isFull;\n  }\n\n  fillBucket() {\n    // fill the whole bucket with dots to indicate completion.\n    this.bucket = this.bucket.map(function () {\n      return '.';\n    });\n    this.showBucket();\n  }\n\n  moveBucket() {\n    // animate dots moving in a forward motion.\n    for (let i = 0; i < this.bucket.length; i++) {\n      this.bucket[i] = (i - this.motionCounter) % 3 ? ' ' : '.';\n    }\n    this.showBucket();\n\n    this.motionCounter++;\n  }\n\n  showBucket() {\n    this.stdout.write(\n      `\\r${this.preamble}${this.bucket.join('')}${this.addendum}`,\n    );\n  }\n}\n\nexport default PseudoProgress;\n"],"mappings":"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"}