{"version":3,"file":"watcher.js","names":["fs","Watchpack","debounce","UsageError","createLogger","log","import","meta","url","onSourceChange","sourceDir","watchFile","watchIgnored","artifactsDir","onChange","shouldWatchFile","debounceTime","ignored","process","platform","map","it","replace","watcher","executeImmediately","on","filePath","proxyFileChanges","debug","join","watchedDirs","watchedFiles","existsSync","lstatSync","isFile","push","watch","files","directories","missing","startTime","Date","now","close","indexOf","toTimeString"],"sources":["../src/watcher.js"],"sourcesContent":["/* @flow */\nimport {fs} from 'mz';\nimport Watchpack from 'watchpack';\nimport debounce from 'debounce';\n\nimport { UsageError } from './errors.js';\nimport {createLogger} from './util/logger.js';\n\nconst log = createLogger(import.meta.url);\n\n\n// onSourceChange types and implementation\n\nexport type ShouldWatchFn = (filePath: string) => boolean;\n\nexport type OnChangeFn = () => any;\n\nexport type OnSourceChangeParams = {|\n  sourceDir: string,\n  watchFile?: Array<string>,\n  watchIgnored?: Array<string>,\n  artifactsDir: string,\n  onChange: OnChangeFn,\n  shouldWatchFile: ShouldWatchFn,\n  debounceTime?: number,\n|};\n\nexport type OnSourceChangeFn = (params: OnSourceChangeParams) => Watchpack;\n\nexport default function onSourceChange(\n  {\n    sourceDir,\n    watchFile,\n    watchIgnored,\n    artifactsDir,\n    onChange,\n    shouldWatchFile,\n    debounceTime = 500,\n  }: OnSourceChangeParams\n): Watchpack {\n  // When running on Windows, transform the ignored paths and globs\n  // as Watchpack does translate the changed files path internally\n  // (See https://github.com/webpack/watchpack/blob/v2.1.1/lib/DirectoryWatcher.js#L99-L103).\n  const ignored = (watchIgnored && process.platform === 'win32')\n    ? watchIgnored.map((it) => it.replace(/\\\\/g, '/'))\n    : watchIgnored;\n\n  // TODO: For network disks, we would need to add {poll: true}.\n  const watcher = ignored ?\n    new Watchpack({ignored}) :\n    new Watchpack();\n\n  // Allow multiple files to be changed before reloading the extension\n  const executeImmediately = false;\n  onChange = debounce(onChange, debounceTime, executeImmediately);\n\n  watcher.on('change', (filePath) => {\n    proxyFileChanges({artifactsDir, onChange, filePath, shouldWatchFile});\n  });\n\n  log.debug(\n    `Watching ${watchFile ? watchFile.join(',') : sourceDir} for changes`\n  );\n\n  const watchedDirs = [];\n  const watchedFiles = [];\n\n  if (watchFile) {\n    for (const filePath of watchFile) {\n      if (fs.existsSync(filePath) && !fs.lstatSync(filePath).isFile()) {\n        throw new UsageError('Invalid --watch-file value: ' +\n          `\"${filePath}\" is not a file.`);\n      }\n\n      watchedFiles.push(filePath);\n    }\n  } else {\n    watchedDirs.push(sourceDir);\n  }\n\n  watcher.watch({\n    files: watchedFiles,\n    directories: watchedDirs,\n    missing: [],\n    startTime: Date.now(),\n  });\n\n  // TODO: support interrupting the watcher on Windows.\n  // https://github.com/mozilla/web-ext/issues/225\n  process.on('SIGINT', () => watcher.close());\n  return watcher;\n}\n\n\n// proxyFileChanges types and implementation.\n\nexport type ProxyFileChangesParams = {|\n  artifactsDir: string,\n  onChange: OnChangeFn,\n  filePath: string,\n  shouldWatchFile: ShouldWatchFn,\n|};\n\nexport function proxyFileChanges(\n  {artifactsDir, onChange, filePath, shouldWatchFile}: ProxyFileChangesParams\n): void {\n  if (filePath.indexOf(artifactsDir) === 0 || !shouldWatchFile(filePath)) {\n    log.debug(`Ignoring change to: ${filePath}`);\n  } else {\n    log.debug(`Changed: ${filePath}`);\n    log.debug(`Last change detection: ${(new Date()).toTimeString()}`);\n    onChange();\n  }\n}\n"],"mappings":"AACA,SAAQA,EAAR,QAAiB,IAAjB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AAEA,MAAMC,GAAG,GAAGD,YAAY,CAACE,MAAM,CAACC,IAAP,CAAYC,GAAb,CAAxB,C,CAGA;;AAkBA,eAAe,SAASC,cAAT,CACb;EACEC,SADF;EAEEC,SAFF;EAGEC,YAHF;EAIEC,YAJF;EAKEC,QALF;EAMEC,eANF;EAOEC,YAAY,GAAG;AAPjB,CADa,EAUF;EACX;EACA;EACA;EACA,MAAMC,OAAO,GAAIL,YAAY,IAAIM,OAAO,CAACC,QAAR,KAAqB,OAAtC,GACZP,YAAY,CAACQ,GAAb,CAAkBC,EAAD,IAAQA,EAAE,CAACC,OAAH,CAAW,KAAX,EAAkB,GAAlB,CAAzB,CADY,GAEZV,YAFJ,CAJW,CAQX;;EACA,MAAMW,OAAO,GAAGN,OAAO,GACrB,IAAIhB,SAAJ,CAAc;IAACgB;EAAD,CAAd,CADqB,GAErB,IAAIhB,SAAJ,EAFF,CATW,CAaX;;EACA,MAAMuB,kBAAkB,GAAG,KAA3B;EACAV,QAAQ,GAAGZ,QAAQ,CAACY,QAAD,EAAWE,YAAX,EAAyBQ,kBAAzB,CAAnB;EAEAD,OAAO,CAACE,EAAR,CAAW,QAAX,EAAsBC,QAAD,IAAc;IACjCC,gBAAgB,CAAC;MAACd,YAAD;MAAeC,QAAf;MAAyBY,QAAzB;MAAmCX;IAAnC,CAAD,CAAhB;EACD,CAFD;EAIAV,GAAG,CAACuB,KAAJ,CACG,YAAWjB,SAAS,GAAGA,SAAS,CAACkB,IAAV,CAAe,GAAf,CAAH,GAAyBnB,SAAU,cAD1D;EAIA,MAAMoB,WAAW,GAAG,EAApB;EACA,MAAMC,YAAY,GAAG,EAArB;;EAEA,IAAIpB,SAAJ,EAAe;IACb,KAAK,MAAMe,QAAX,IAAuBf,SAAvB,EAAkC;MAChC,IAAIX,EAAE,CAACgC,UAAH,CAAcN,QAAd,KAA2B,CAAC1B,EAAE,CAACiC,SAAH,CAAaP,QAAb,EAAuBQ,MAAvB,EAAhC,EAAiE;QAC/D,MAAM,IAAI/B,UAAJ,CAAe,iCAClB,IAAGuB,QAAS,kBADT,CAAN;MAED;;MAEDK,YAAY,CAACI,IAAb,CAAkBT,QAAlB;IACD;EACF,CATD,MASO;IACLI,WAAW,CAACK,IAAZ,CAAiBzB,SAAjB;EACD;;EAEDa,OAAO,CAACa,KAAR,CAAc;IACZC,KAAK,EAAEN,YADK;IAEZO,WAAW,EAAER,WAFD;IAGZS,OAAO,EAAE,EAHG;IAIZC,SAAS,EAAEC,IAAI,CAACC,GAAL;EAJC,CAAd,EAzCW,CAgDX;EACA;;EACAxB,OAAO,CAACO,EAAR,CAAW,QAAX,EAAqB,MAAMF,OAAO,CAACoB,KAAR,EAA3B;EACA,OAAOpB,OAAP;AACD,C,CAGD;;AASA,OAAO,SAASI,gBAAT,CACL;EAACd,YAAD;EAAeC,QAAf;EAAyBY,QAAzB;EAAmCX;AAAnC,CADK,EAEC;EACN,IAAIW,QAAQ,CAACkB,OAAT,CAAiB/B,YAAjB,MAAmC,CAAnC,IAAwC,CAACE,eAAe,CAACW,QAAD,CAA5D,EAAwE;IACtErB,GAAG,CAACuB,KAAJ,CAAW,uBAAsBF,QAAS,EAA1C;EACD,CAFD,MAEO;IACLrB,GAAG,CAACuB,KAAJ,CAAW,YAAWF,QAAS,EAA/B;IACArB,GAAG,CAACuB,KAAJ,CAAW,0BAA0B,IAAIa,IAAJ,EAAD,CAAaI,YAAb,EAA4B,EAAhE;IACA/B,QAAQ;EACT;AACF"}