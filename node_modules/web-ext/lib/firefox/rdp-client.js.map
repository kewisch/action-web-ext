{"version":3,"file":"rdp-client.js","names":["net","EventEmitter","domain","DEFAULT_PORT","DEFAULT_HOST","UNSOLICITED_EVENTS","Set","parseRDPMessage","data","str","toString","sepIdx","indexOf","byteLen","parseInt","slice","isNaN","error","Error","fatal","length","msg","rdpMessage","JSON","parse","connectToFirefox","port","client","FirefoxRDPClient","connect","then","constructor","_incoming","Buffer","alloc","_pending","_active","Map","_onData","args","onData","_onError","onError","_onEnd","onEnd","_onTimeout","onTimeout","Promise","resolve","reject","d","create","once","run","conn","createConnection","host","_rdpConnection","on","_expectReply","disconnect","off","end","_rejectAllRequests","activeDeferred","values","clear","deferred","request","requestProps","to","type","push","_flushPendingRequests","filter","has","stringify","from","write","err","targetActor","set","_handleMessage","rdpData","emit","get","delete","_readMessage","String","concat"],"sources":["../../src/firefox/rdp-client.js"],"sourcesContent":["/* @flow */\nimport net from 'net';\nimport EventEmitter from 'events';\nimport domain from 'domain';\n\nexport type RDPRequest = {\n  to: string,\n  type: string,\n}\n\nexport type RDPResult = {\n  from: string,\n  type: string,\n}\n\nexport type Deferred = {|\n  resolve: Function,\n  reject: Function,\n|}\n\ntype ParseResult = {|\n  data: Buffer,\n  rdpMessage?: Object,\n  error?: Error,\n  fatal?: boolean,\n|}\n\nexport const DEFAULT_PORT = 6000;\nexport const DEFAULT_HOST = '127.0.0.1';\n\nconst UNSOLICITED_EVENTS = new Set([\n  'tabNavigated',\n  'styleApplied',\n  'propertyChange',\n  'networkEventUpdate',\n  'networkEvent',\n  'propertyChange',\n  'newMutations',\n  'frameUpdate',\n  'tabListChanged',\n]);\n\n// Parse RDP packets: BYTE_LENGTH + ':' + DATA.\nexport function parseRDPMessage(data: Buffer): ParseResult {\n  const str = data.toString();\n  const sepIdx = str.indexOf(':');\n  if (sepIdx < 1) {\n    return {data};\n  }\n\n  const byteLen = parseInt(str.slice(0, sepIdx));\n  if (isNaN(byteLen)) {\n    const error = new Error('Error parsing RDP message length');\n    return {data, error, fatal: true};\n  }\n\n  if (data.length - (sepIdx + 1) < byteLen) {\n    // Can't parse yet, will retry once more data has been received.\n    return {data};\n  }\n\n  data = data.slice(sepIdx + 1);\n  const msg = data.slice(0, byteLen);\n  data = data.slice(byteLen);\n\n  try {\n    return {data, rdpMessage: JSON.parse(msg.toString())};\n  } catch (error) {\n    return {data, error, fatal: false};\n  }\n}\n\nexport function connectToFirefox(port: number): Promise<FirefoxRDPClient> {\n  const client = new FirefoxRDPClient();\n  return client.connect(port).then(() => client);\n}\n\nexport default class FirefoxRDPClient extends EventEmitter {\n  _incoming: Buffer;\n  _pending: Array<{| request: RDPRequest, deferred: Deferred |}>;\n  _active: Map<string, Deferred>;\n  _rdpConnection: net.Socket;\n  _onData: Function;\n  _onError: Function;\n  _onEnd: Function;\n  _onTimeout: Function;\n\n  constructor() {\n    super();\n    this._incoming = Buffer.alloc(0);\n    this._pending = [];\n    this._active = new Map();\n\n    this._onData = (...args) => this.onData(...args);\n    this._onError = (...args) => this.onError(...args);\n    this._onEnd = (...args) => this.onEnd(...args);\n    this._onTimeout = (...args) => this.onTimeout(...args);\n  }\n\n  connect(port: number): Promise<void> {\n    return new Promise((resolve, reject) => {\n      // Create a domain to wrap the errors that may be triggered\n      // by creating the client connection (e.g. ECONNREFUSED)\n      // so that we can reject the promise returned instead of\n      // exiting the entire process.\n      const d = domain.create();\n      d.once('error', reject);\n      d.run(() => {\n        const conn = net.createConnection({\n          port,\n          host: DEFAULT_HOST,\n        });\n\n        this._rdpConnection = conn;\n        conn.on('data', this._onData);\n        conn.on('error', this._onError);\n        conn.on('end', this._onEnd);\n        conn.on('timeout', this._onTimeout);\n\n        // Resolve once the expected initial root message\n        // has been received.\n        this._expectReply('root', {resolve, reject});\n      });\n    });\n  }\n\n  disconnect(): void {\n    if (!this._rdpConnection) {\n      return;\n    }\n\n    const conn = this._rdpConnection;\n    conn.off('data', this._onData);\n    conn.off('error', this._onError);\n    conn.off('end', this._onEnd);\n    conn.off('timeout', this._onTimeout);\n    conn.end();\n\n    this._rejectAllRequests(new Error('RDP connection closed'));\n  }\n\n  _rejectAllRequests(error: Error) {\n    for (const activeDeferred of this._active.values()) {\n      activeDeferred.reject(error);\n    }\n    this._active.clear();\n\n    for (const {deferred} of this._pending) {\n      deferred.reject(error);\n    }\n    this._pending = [];\n  }\n\n  async request(requestProps: string | RDPRequest): Promise<RDPResult> {\n    let request: RDPRequest;\n\n    if (typeof requestProps === 'string') {\n      request = {to: 'root', type: requestProps};\n    } else {\n      request = requestProps;\n    }\n\n    if (request.to == null) {\n      throw new Error(\n        `Unexpected RDP request without target actor: ${request.type}`\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      const deferred = {resolve, reject};\n      this._pending.push({request, deferred});\n      this._flushPendingRequests();\n    });\n  }\n\n  _flushPendingRequests(): void {\n    this._pending = this._pending.filter(({request, deferred}) => {\n      if (this._active.has(request.to)) {\n        // Keep in the pending requests until there are no requests\n        // active on the target RDP actor.\n        return true;\n      }\n\n      const conn = this._rdpConnection;\n      if (!conn) {\n        throw new Error('RDP connection closed');\n      }\n\n      try {\n        let str = JSON.stringify(request);\n        str = `${Buffer.from(str).length}:${str}`;\n        conn.write(str);\n        this._expectReply(request.to, deferred);\n      } catch (err) {\n        deferred.reject(err);\n      }\n\n      // Remove the pending request from the queue.\n      return false;\n    });\n  }\n\n  _expectReply(targetActor: string, deferred: Deferred): void {\n    if (this._active.has(targetActor)) {\n      throw new Error(`${targetActor} does already have an active request`);\n    }\n\n    this._active.set(targetActor, deferred);\n  }\n\n  _handleMessage(rdpData: Object): void {\n    if (rdpData.from == null) {\n      if (rdpData.error) {\n        this.emit('rdp-error', rdpData);\n        return;\n      }\n\n      this.emit('error', new Error(\n        `Received an RDP message without a sender actor: ${\n          JSON.stringify(rdpData)\n        }`\n      ));\n      return;\n    }\n\n    if (UNSOLICITED_EVENTS.has(rdpData.type)) {\n      this.emit('unsolicited-event', rdpData);\n      return;\n    }\n\n    if (this._active.has(rdpData.from)) {\n      const deferred = this._active.get(rdpData.from);\n      this._active.delete(rdpData.from);\n      if (rdpData.error) {\n        deferred?.reject(rdpData);\n      } else {\n        deferred?.resolve(rdpData);\n      }\n      this._flushPendingRequests();\n      return;\n    }\n\n    this.emit('error', new Error(\n      `Unexpected RDP message received: ${JSON.stringify(rdpData)}`\n    ));\n  }\n\n  _readMessage(): boolean {\n    const {\n      data, rdpMessage, error, fatal,\n    } = parseRDPMessage(this._incoming);\n\n    this._incoming = data;\n\n    if (error) {\n      this.emit(\n        'error',\n        new Error(`Error parsing RDP packet: ${String(error)}`)\n      );\n      // Disconnect automatically on a fatal error.\n      if (fatal) {\n        this.disconnect();\n      }\n      // Caller can parse the next message if the error wasn't fatal\n      // (e.g. the RDP packet that couldn't be parsed has been already\n      // removed from the incoming data buffer).\n      return !fatal;\n    }\n\n    if (!rdpMessage) {\n      // Caller will need to wait more data to parse the next message.\n      return false;\n    }\n\n    this._handleMessage(rdpMessage);\n    // Caller can try to parse the next message from the remining data.\n    return true;\n  }\n\n  onData(data: Buffer) {\n    this._incoming = Buffer.concat([this._incoming, data]);\n    while (this._readMessage()) {\n      // Keep parsing and handling messages until readMessage\n      // returns false.\n    }\n  }\n\n  onError(error: Error) {\n    this.emit('error', error);\n  }\n\n  onEnd() {\n    this.emit('end');\n  }\n\n  onTimeout() {\n    this.emit('timeout');\n  }\n}\n"],"mappings":"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"}