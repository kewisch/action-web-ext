{"version":3,"file":"rdp-client.js","names":["net","EventEmitter","domain","DEFAULT_PORT","DEFAULT_HOST","UNSOLICITED_EVENTS","Set","parseRDPMessage","data","str","toString","sepIdx","indexOf","byteLen","parseInt","slice","isNaN","error","Error","fatal","length","msg","rdpMessage","JSON","parse","connectToFirefox","port","client","FirefoxRDPClient","connect","then","_incoming","_pending","_active","_rdpConnection","_onData","_onError","_onEnd","_onTimeout","constructor","Buffer","alloc","Map","args","onData","onError","onEnd","onTimeout","Promise","resolve","reject","d","create","once","run","conn","createConnection","host","on","_expectReply","disconnect","off","end","_rejectAllRequests","activeDeferred","values","clear","deferred","request","requestProps","to","type","push","_flushPendingRequests","filter","has","stringify","from","write","err","targetActor","set","_handleMessage","rdpData","emit","get","delete","_readMessage","String","concat"],"sources":["../../src/firefox/rdp-client.js"],"sourcesContent":["import net from 'net';\nimport EventEmitter from 'events';\nimport domain from 'domain';\n\nexport const DEFAULT_PORT = 6000;\nexport const DEFAULT_HOST = '127.0.0.1';\n\nconst UNSOLICITED_EVENTS = new Set([\n  'tabNavigated',\n  'styleApplied',\n  'propertyChange',\n  'networkEventUpdate',\n  'networkEvent',\n  'propertyChange',\n  'newMutations',\n  'frameUpdate',\n  'tabListChanged',\n]);\n\n// Parse RDP packets: BYTE_LENGTH + ':' + DATA.\nexport function parseRDPMessage(data) {\n  const str = data.toString();\n  const sepIdx = str.indexOf(':');\n  if (sepIdx < 1) {\n    return { data };\n  }\n\n  const byteLen = parseInt(str.slice(0, sepIdx));\n  if (isNaN(byteLen)) {\n    const error = new Error('Error parsing RDP message length');\n    return { data, error, fatal: true };\n  }\n\n  if (data.length - (sepIdx + 1) < byteLen) {\n    // Can't parse yet, will retry once more data has been received.\n    return { data };\n  }\n\n  data = data.slice(sepIdx + 1);\n  const msg = data.slice(0, byteLen);\n  data = data.slice(byteLen);\n\n  try {\n    return { data, rdpMessage: JSON.parse(msg.toString()) };\n  } catch (error) {\n    return { data, error, fatal: false };\n  }\n}\n\nexport async function connectToFirefox(port) {\n  const client = new FirefoxRDPClient();\n  return client.connect(port).then(() => client);\n}\n\nexport default class FirefoxRDPClient extends EventEmitter {\n  _incoming;\n  _pending;\n  _active;\n  _rdpConnection;\n  _onData;\n  _onError;\n  _onEnd;\n  _onTimeout;\n\n  constructor() {\n    super();\n    this._incoming = Buffer.alloc(0);\n    this._pending = [];\n    this._active = new Map();\n\n    this._onData = (...args) => this.onData(...args);\n    this._onError = (...args) => this.onError(...args);\n    this._onEnd = (...args) => this.onEnd(...args);\n    this._onTimeout = (...args) => this.onTimeout(...args);\n  }\n\n  connect(port) {\n    return new Promise((resolve, reject) => {\n      // Create a domain to wrap the errors that may be triggered\n      // by creating the client connection (e.g. ECONNREFUSED)\n      // so that we can reject the promise returned instead of\n      // exiting the entire process.\n      const d = domain.create();\n      d.once('error', reject);\n      d.run(() => {\n        const conn = net.createConnection({\n          port,\n          host: DEFAULT_HOST,\n        });\n\n        this._rdpConnection = conn;\n        conn.on('data', this._onData);\n        conn.on('error', this._onError);\n        conn.on('end', this._onEnd);\n        conn.on('timeout', this._onTimeout);\n\n        // Resolve once the expected initial root message\n        // has been received.\n        this._expectReply('root', { resolve, reject });\n      });\n    });\n  }\n\n  disconnect() {\n    if (!this._rdpConnection) {\n      return;\n    }\n\n    const conn = this._rdpConnection;\n    conn.off('data', this._onData);\n    conn.off('error', this._onError);\n    conn.off('end', this._onEnd);\n    conn.off('timeout', this._onTimeout);\n    conn.end();\n\n    this._rejectAllRequests(new Error('RDP connection closed'));\n  }\n\n  _rejectAllRequests(error) {\n    for (const activeDeferred of this._active.values()) {\n      activeDeferred.reject(error);\n    }\n    this._active.clear();\n\n    for (const { deferred } of this._pending) {\n      deferred.reject(error);\n    }\n    this._pending = [];\n  }\n\n  async request(requestProps) {\n    let request;\n\n    if (typeof requestProps === 'string') {\n      request = { to: 'root', type: requestProps };\n    } else {\n      request = requestProps;\n    }\n\n    if (request.to == null) {\n      throw new Error(\n        `Unexpected RDP request without target actor: ${request.type}`,\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      const deferred = { resolve, reject };\n      this._pending.push({ request, deferred });\n      this._flushPendingRequests();\n    });\n  }\n\n  _flushPendingRequests() {\n    this._pending = this._pending.filter(({ request, deferred }) => {\n      if (this._active.has(request.to)) {\n        // Keep in the pending requests until there are no requests\n        // active on the target RDP actor.\n        return true;\n      }\n\n      const conn = this._rdpConnection;\n      if (!conn) {\n        throw new Error('RDP connection closed');\n      }\n\n      try {\n        let str = JSON.stringify(request);\n        str = `${Buffer.from(str).length}:${str}`;\n        conn.write(str);\n        this._expectReply(request.to, deferred);\n      } catch (err) {\n        deferred.reject(err);\n      }\n\n      // Remove the pending request from the queue.\n      return false;\n    });\n  }\n\n  _expectReply(targetActor, deferred) {\n    if (this._active.has(targetActor)) {\n      throw new Error(`${targetActor} does already have an active request`);\n    }\n\n    this._active.set(targetActor, deferred);\n  }\n\n  _handleMessage(rdpData) {\n    if (rdpData.from == null) {\n      if (rdpData.error) {\n        this.emit('rdp-error', rdpData);\n        return;\n      }\n\n      this.emit(\n        'error',\n        new Error(\n          `Received an RDP message without a sender actor: ${JSON.stringify(\n            rdpData,\n          )}`,\n        ),\n      );\n      return;\n    }\n\n    if (UNSOLICITED_EVENTS.has(rdpData.type)) {\n      this.emit('unsolicited-event', rdpData);\n      return;\n    }\n\n    if (this._active.has(rdpData.from)) {\n      const deferred = this._active.get(rdpData.from);\n      this._active.delete(rdpData.from);\n      if (rdpData.error) {\n        deferred?.reject(rdpData);\n      } else {\n        deferred?.resolve(rdpData);\n      }\n      this._flushPendingRequests();\n      return;\n    }\n\n    this.emit(\n      'error',\n      new Error(`Unexpected RDP message received: ${JSON.stringify(rdpData)}`),\n    );\n  }\n\n  _readMessage() {\n    const { data, rdpMessage, error, fatal } = parseRDPMessage(this._incoming);\n\n    this._incoming = data;\n\n    if (error) {\n      this.emit(\n        'error',\n        new Error(`Error parsing RDP packet: ${String(error)}`),\n      );\n      // Disconnect automatically on a fatal error.\n      if (fatal) {\n        this.disconnect();\n      }\n      // Caller can parse the next message if the error wasn't fatal\n      // (e.g. the RDP packet that couldn't be parsed has been already\n      // removed from the incoming data buffer).\n      return !fatal;\n    }\n\n    if (!rdpMessage) {\n      // Caller will need to wait more data to parse the next message.\n      return false;\n    }\n\n    this._handleMessage(rdpMessage);\n    // Caller can try to parse the next message from the remaining data.\n    return true;\n  }\n\n  onData(data) {\n    this._incoming = Buffer.concat([this._incoming, data]);\n    while (this._readMessage()) {\n      // Keep parsing and handling messages until readMessage\n      // returns false.\n    }\n  }\n\n  onError(error) {\n    this.emit('error', error);\n  }\n\n  onEnd() {\n    this.emit('end');\n  }\n\n  onTimeout() {\n    this.emit('timeout');\n  }\n}\n"],"mappings":"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","ignoreList":[]}