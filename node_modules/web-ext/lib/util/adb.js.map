{"version":3,"file":"adb.js","names":["ADBKit","isErrorWithCode","UsageError","WebExtError","createLogger","packageIdentifiers","defaultApkComponents","DEVICE_DIR_BASE","ARTIFACTS_DIR_PREFIX","defaultADB","default","log","import","meta","url","wrapADBCall","asyncFn","error","message","includes","ADBUtils","constructor","params","adb","adbBin","adbHost","adbPort","adbClient","createClient","bin","host","port","artifactsDirMap","Map","userAbortDiscovery","runShellCommand","deviceId","cmd","debug","JSON","stringify","getDevice","shell","then","util","readAll","res","toString","discoverDevices","devices","listDevices","map","dev","id","discoverInstalledFirefoxAPKs","firefoxApk","pmList","split","line","replace","trim","filter","browser","startsWith","getAndroidVersionNumber","androidVersion","androidVersionNumber","parseInt","isNaN","ensureRequiredAPKRuntimePermissions","apk","permissions","permissionsMap","perm","pmDumpLogs","amForceStopAPK","getOrCreateArtifactsDir","artifactsDir","get","Date","now","testDirOut","set","detectOrRemoveOldArtifacts","removeArtifactDirs","files","readdir","found","file","isDirectory","name","clearArtifactsDir","delete","pushFile","localPath","devicePath","push","transfer","Promise","resolve","on","startFirefoxAPK","apkComponent","deviceProfileDir","extras","key","value","component","startActivity","wait","action","setUserAbortDiscovery","discoverRDPUnixSocket","maxDiscoveryTime","retryInterval","rdpUnixSockets","discoveryStartedAt","msg","length","info","endsWith","setTimeout","pop","setupForward","remote","local","forward","listADBDevices","adbUtils","listADBFirefoxAPKs"],"sources":["../../src/util/adb.js"],"sourcesContent":["/* @flow */\nimport ADBKit from '@devicefarmer/adbkit';\n\nimport {\n  isErrorWithCode,\n  UsageError,\n  WebExtError,\n} from '../errors.js';\nimport {createLogger} from '../util/logger.js';\nimport packageIdentifiers, {\n  defaultApkComponents,\n} from '../firefox/package-identifiers.js';\n\nexport const DEVICE_DIR_BASE = '/data/local/tmp/';\nexport const ARTIFACTS_DIR_PREFIX = 'web-ext-artifacts-';\n\nconst defaultADB = ADBKit.default;\n\nconst log = createLogger(import.meta.url);\n\nexport type ADBUtilsParams = {|\n  adb?: typeof defaultADB,\n  // ADB configs.\n  adbBin?: string,\n  adbHost?: string,\n  adbPort?: string,\n  adbDevice?: string,\n|};\n\nexport type DiscoveryParams = {\n  maxDiscoveryTime: number,\n  retryInterval: number,\n};\n\n// Helper function used to raise an UsageError when the adb binary has not been found.\nasync function wrapADBCall(asyncFn: (...any) => Promise<any>): Promise<any> {\n  try {\n    return await asyncFn();\n  } catch (error) {\n    if (isErrorWithCode('ENOENT', error) &&\n        error.message.includes('spawn adb')) {\n      throw new UsageError(\n        'No adb executable has been found. ' +\n          'You can Use --adb-bin, --adb-host/--adb-port ' +\n          'to configure it manually if needed.');\n    }\n\n    throw error;\n  }\n}\n\nexport default class ADBUtils {\n  params: ADBUtilsParams;\n  adb: typeof defaultADB;\n  adbClient: any; // TODO: better flow typing here.\n\n  // Map<deviceId -> artifactsDir>\n  artifactsDirMap: Map<string, string>;\n  // Toggled when the user wants to abort the RDP Unix Socket discovery loop\n  // while it is still executing.\n  userAbortDiscovery: boolean;\n\n  constructor(params: ADBUtilsParams) {\n    this.params = params;\n\n    const {\n      adb,\n      adbBin,\n      adbHost,\n      adbPort,\n    } = params;\n\n    this.adb = adb || defaultADB;\n\n    this.adbClient = this.adb.createClient({\n      bin: adbBin,\n      host: adbHost,\n      port: adbPort,\n    });\n\n    this.artifactsDirMap = new Map();\n\n    this.userAbortDiscovery = false;\n  }\n\n  runShellCommand(\n    deviceId: string, cmd: string | Array<string>\n  ): Promise<string> {\n    const {adb, adbClient} = this;\n\n    log.debug(`Run adb shell command on ${deviceId}: ${JSON.stringify(cmd)}`);\n\n    return wrapADBCall(async () => {\n      return await adbClient.getDevice(deviceId).shell(cmd).then(\n        adb.util.readAll\n      );\n    }).then((res) => res.toString());\n  }\n\n  async discoverDevices(): Promise<Array<string>> {\n    const {adbClient} = this;\n\n    let devices = [];\n\n    log.debug('Listing android devices');\n    devices = await wrapADBCall(async () => adbClient.listDevices());\n\n    return devices.map((dev) => dev.id);\n  }\n\n  async discoverInstalledFirefoxAPKs(\n    deviceId: string,\n    firefoxApk?: string\n  ): Promise<Array<string>> {\n    log.debug(`Listing installed Firefox APKs on ${deviceId}`);\n\n    const pmList = await this.runShellCommand(deviceId, [\n      'pm', 'list', 'packages',\n    ]);\n\n    return pmList.split('\\n')\n      .map((line) => line.replace('package:', '').trim())\n      .filter((line) => {\n        // Look for an exact match if firefoxApk is defined.\n        if (firefoxApk) {\n          return line === firefoxApk;\n        }\n        // Match any package name that starts with the package name of a Firefox for Android browser.\n        for (const browser of packageIdentifiers) {\n          if (line.startsWith(browser)) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n  }\n\n  async getAndroidVersionNumber(deviceId: string): Promise<number> {\n    const androidVersion = (await this.runShellCommand(deviceId, [\n      'getprop', 'ro.build.version.sdk',\n    ])).trim();\n\n    const androidVersionNumber = parseInt(androidVersion);\n\n    // No need to check the granted runtime permissions on Android versions < Lollypop.\n    if (isNaN(androidVersionNumber)) {\n      throw new WebExtError(\n        'Unable to discovery android version on ' +\n        `${deviceId}: ${androidVersion}`\n      );\n    }\n\n    return androidVersionNumber;\n  }\n\n  // Raise an UsageError when the given APK does not have the required runtime permissions.\n  async ensureRequiredAPKRuntimePermissions(\n    deviceId: string, apk: string, permissions: Array<string>\n  ): Promise<void> {\n    const permissionsMap = {};\n\n    // Initialize every permission to false in the permissions map.\n    for (const perm of permissions) {\n      permissionsMap[perm] = false;\n    }\n\n    // Retrieve the permissions information for the given apk.\n    const pmDumpLogs = (await this.runShellCommand(deviceId, [\n      'pm', 'dump', apk,\n    ])).split('\\n');\n\n    // Set to true the required permissions that have been granted.\n    for (const line of pmDumpLogs) {\n      for (const perm of permissions) {\n        if (line.includes(`${perm}: granted=true`) ||\n            line.includes(`${perm}, granted=true`)) {\n          permissionsMap[perm] = true;\n        }\n      }\n    }\n\n    for (const perm of permissions) {\n      if (!permissionsMap[perm]) {\n        throw new UsageError(\n          `Required ${perm} has not be granted for ${apk}. ` +\n          'Please grant them using the Android Settings ' +\n          'or using the following adb command:\\n' +\n          `\\t adb shell pm grant ${apk} ${perm}\\n`\n        );\n      }\n    }\n  }\n\n  async amForceStopAPK(deviceId: string, apk: string): Promise<void> {\n    await this.runShellCommand(deviceId, [\n      'am', 'force-stop', apk,\n    ]);\n  }\n\n  async getOrCreateArtifactsDir(deviceId: string): Promise<string> {\n    let artifactsDir = this.artifactsDirMap.get(deviceId);\n\n    if (artifactsDir) {\n      return artifactsDir;\n    }\n\n    artifactsDir = `${DEVICE_DIR_BASE}${ARTIFACTS_DIR_PREFIX}${Date.now()}`;\n\n    const testDirOut = (await this.runShellCommand(\n      deviceId, `test -d ${artifactsDir} ; echo $?`\n    )).trim();\n\n    if (testDirOut !== '1') {\n      throw new WebExtError(\n        `Cannot create artifacts directory ${artifactsDir} ` +\n        `because it exists on ${deviceId}.`\n      );\n    }\n\n    await this.runShellCommand(deviceId, ['mkdir', '-p', artifactsDir]);\n\n    this.artifactsDirMap.set(deviceId, artifactsDir);\n\n    return artifactsDir;\n  }\n\n  async detectOrRemoveOldArtifacts(\n    deviceId: string, removeArtifactDirs?: boolean = false\n  ): Promise<boolean> {\n    const {adbClient} = this;\n\n    log.debug('Checking adb device for existing web-ext artifacts dirs');\n\n    return wrapADBCall(async () => {\n      const files = await adbClient.getDevice(deviceId).readdir(\n        DEVICE_DIR_BASE\n      );\n      let found = false;\n\n      for (const file of files) {\n        if (!file.isDirectory() ||\n            !file.name.startsWith(ARTIFACTS_DIR_PREFIX)) {\n          continue;\n        }\n\n        // Return earlier if we only need to warn the user that some\n        // existing artifacts dirs have been found on the adb device.\n        if (!removeArtifactDirs) {\n          return true;\n        }\n\n        found = true;\n\n        const artifactsDir = `${DEVICE_DIR_BASE}${file.name}`;\n\n        log.debug(\n          `Removing artifacts directory ${artifactsDir} from device ${deviceId}`\n        );\n\n        await this.runShellCommand(deviceId, ['rm', '-rf', artifactsDir]);\n      }\n\n      return found;\n    });\n  }\n\n  async clearArtifactsDir(deviceId: string): Promise<void> {\n    const artifactsDir = this.artifactsDirMap.get(deviceId);\n\n    if (!artifactsDir) {\n      // nothing to do here.\n      return;\n    }\n\n    this.artifactsDirMap.delete(deviceId);\n\n    log.debug(\n      `Removing ${artifactsDir} artifacts directory on ${deviceId} device`\n    );\n\n    await this.runShellCommand(deviceId, ['rm', '-rf', artifactsDir]);\n  }\n\n  async pushFile(\n    deviceId: string, localPath: string, devicePath: string\n  ): Promise<void> {\n    const {adbClient} = this;\n\n    log.debug(`Pushing ${localPath} to ${devicePath} on ${deviceId}`);\n\n    await wrapADBCall(async () => {\n      await adbClient.getDevice(deviceId).push(localPath, devicePath)\n        .then(function(transfer) {\n          return new Promise((resolve) => {\n            transfer.on('end', resolve);\n          });\n        });\n    });\n  }\n\n  async startFirefoxAPK(\n    deviceId: string,\n    apk: string,\n    apkComponent: ?string,\n    deviceProfileDir: string,\n  ): Promise<void> {\n    const {adbClient} = this;\n\n    log.debug(\n      `Starting ${apk} on ${deviceId}`\n    );\n\n    // Fenix does ignore the -profile parameter, on the contrary Fennec\n    // would run using the given path as the profile to be used during\n    // this execution.\n    const extras = [{\n      key: 'args',\n      value: `-profile ${deviceProfileDir}`,\n    }];\n\n    if (!apkComponent) {\n      apkComponent = '.App';\n      if (defaultApkComponents[apk]) {\n        apkComponent = defaultApkComponents[apk];\n      }\n    } else if (!apkComponent.includes('.')) {\n      apkComponent = `.${apkComponent}`;\n    }\n\n    // if `apk` is a browser package or the `apk` has a\n    // browser package prefix: prepend the package identifier\n    // before `apkComponent`\n    if (apkComponent.startsWith('.')) {\n      for (const browser of packageIdentifiers) {\n        if (apk === browser || apk.startsWith(`${browser}.`)) {\n          apkComponent = browser + apkComponent;\n        }\n      }\n    }\n\n    // if `apkComponent` starts with a '.', then adb will expand\n    // the following to: `${apk}/${apk}.${apkComponent}`\n    const component = `${apk}/${apkComponent}`;\n\n    await wrapADBCall(async () => {\n      await adbClient.getDevice(deviceId).startActivity({\n        wait: true,\n        action: 'android.activity.MAIN',\n        component,\n        extras,\n      });\n    });\n  }\n\n  setUserAbortDiscovery(value: boolean) {\n    this.userAbortDiscovery = value;\n  }\n\n  async discoverRDPUnixSocket(\n    deviceId: string, apk: string,\n    {maxDiscoveryTime, retryInterval}: DiscoveryParams = {}\n  ): Promise<string> {\n    let rdpUnixSockets = [];\n\n    const discoveryStartedAt = Date.now();\n    const msg = (\n      `Waiting for ${apk} Remote Debugging Server...` +\n      '\\nMake sure to enable \"Remote Debugging via USB\" ' +\n      'from Settings -> Developer Tools if it is not yet enabled.'\n    );\n\n    while (rdpUnixSockets.length === 0) {\n      log.info(msg);\n      if (this.userAbortDiscovery) {\n        throw new UsageError(\n          'Exiting Firefox Remote Debugging socket discovery on user request'\n        );\n      }\n\n      if (Date.now() - discoveryStartedAt > maxDiscoveryTime) {\n        throw new WebExtError(\n          'Timeout while waiting for the Android Firefox Debugger Socket'\n        );\n      }\n\n      rdpUnixSockets = (await this.runShellCommand(deviceId, [\n        'cat', '/proc/net/unix',\n      ])).split('\\n').filter((line) => {\n        // The RDP unix socket is expected to be a path in the form:\n        //   /data/data/org.mozilla.fennec_rpl/firefox-debugger-socket\n        return line.trim().endsWith(`${apk}/firefox-debugger-socket`);\n      });\n\n      if (rdpUnixSockets.length === 0) {\n        await new Promise((resolve) => setTimeout(resolve, retryInterval));\n      }\n    }\n\n    // Convert into an array of unix socket filenames.\n    rdpUnixSockets = rdpUnixSockets.map((line) => {\n      return line.trim().split(/\\s/).pop();\n    });\n\n    if (rdpUnixSockets.length > 1) {\n      throw new WebExtError(\n        'Unexpected multiple RDP sockets: ' +\n        `${JSON.stringify(rdpUnixSockets)}`\n      );\n    }\n\n    return rdpUnixSockets[0];\n  }\n\n  async setupForward(deviceId: string, remote: string, local: string) {\n    const {adbClient} = this;\n\n    // TODO(rpl): we should use adb.listForwards and reuse the existing one if any (especially\n    // because adbkit doesn't seem to support `adb forward --remote` yet).\n    log.debug(`Configuring ADB forward for ${deviceId}: ${remote} -> ${local}`);\n\n    await wrapADBCall(async () => {\n      await adbClient.getDevice(deviceId).forward(local, remote);\n    });\n  }\n}\n\nexport async function listADBDevices(adbBin?: string): Promise<Array<string>> {\n  const adbUtils = new ADBUtils({adbBin});\n  return adbUtils.discoverDevices();\n}\n\nexport async function listADBFirefoxAPKs(\n  deviceId: string,\n  adbBin?: string\n): Promise<Array<string>> {\n  const adbUtils = new ADBUtils({adbBin});\n  return adbUtils.discoverInstalledFirefoxAPKs(deviceId);\n}\n"],"mappings":"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"}