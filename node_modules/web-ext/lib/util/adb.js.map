{"version":3,"file":"adb.js","names":["ADBKit","isErrorWithCode","UsageError","WebExtError","createLogger","packageIdentifiers","defaultApkComponents","DEVICE_DIR_BASE","ARTIFACTS_DIR_PREFIX","defaultADB","default","log","import","meta","url","wrapADBCall","asyncFn","error","message","includes","ADBUtils","params","adb","adbClient","artifactsDirMap","userAbortDiscovery","constructor","adbBin","adbHost","adbPort","createClient","bin","host","port","Map","runShellCommand","deviceId","cmd","debug","JSON","stringify","getDevice","shell","then","util","readAll","res","toString","discoverDevices","devices","listDevices","map","dev","id","getCurrentUser","currentUser","userId","parseInt","trim","isNaN","discoverInstalledFirefoxAPKs","firefoxApk","pmList","split","line","replace","filter","browser","startsWith","amForceStopAPK","apk","getOrCreateArtifactsDir","artifactsDir","get","Date","now","testDirOut","set","detectOrRemoveOldArtifacts","removeArtifactDirs","files","readdir","found","file","isDirectory","name","clearArtifactsDir","delete","pushFile","localPath","devicePath","push","transfer","Promise","resolve","on","startFirefoxAPK","apkComponent","deviceProfileDir","extras","key","value","component","startActivity","wait","action","category","setUserAbortDiscovery","discoverRDPUnixSocket","maxDiscoveryTime","retryInterval","rdpUnixSockets","discoveryStartedAt","msg","length","info","endsWith","setTimeout","pop","setupForward","remote","local","forward","listADBDevices","adbUtils","listADBFirefoxAPKs"],"sources":["../../src/util/adb.js"],"sourcesContent":["import ADBKit from '@devicefarmer/adbkit';\n\nimport { isErrorWithCode, UsageError, WebExtError } from '../errors.js';\nimport { createLogger } from '../util/logger.js';\nimport packageIdentifiers, {\n  defaultApkComponents,\n} from '../firefox/package-identifiers.js';\n\nexport const DEVICE_DIR_BASE = '/data/local/tmp/';\nexport const ARTIFACTS_DIR_PREFIX = 'web-ext-artifacts-';\n\nconst defaultADB = ADBKit.default;\n\nconst log = createLogger(import.meta.url);\n\n// Helper function used to raise an UsageError when the adb binary has not been found.\nasync function wrapADBCall(asyncFn) {\n  try {\n    return await asyncFn();\n  } catch (error) {\n    if (\n      isErrorWithCode('ENOENT', error) &&\n      error.message.includes('spawn adb')\n    ) {\n      throw new UsageError(\n        'No adb executable has been found. ' +\n          'You can Use --adb-bin, --adb-host/--adb-port ' +\n          'to configure it manually if needed.',\n      );\n    }\n\n    throw error;\n  }\n}\n\nexport default class ADBUtils {\n  params;\n  adb;\n  adbClient;\n\n  // Map<deviceId -> artifactsDir>\n  artifactsDirMap;\n  // Toggled when the user wants to abort the RDP Unix Socket discovery loop\n  // while it is still executing.\n  userAbortDiscovery;\n\n  constructor(params) {\n    this.params = params;\n\n    const { adb, adbBin, adbHost, adbPort } = params;\n\n    this.adb = adb || defaultADB;\n\n    this.adbClient = this.adb.createClient({\n      bin: adbBin,\n      host: adbHost,\n      port: adbPort,\n    });\n\n    this.artifactsDirMap = new Map();\n\n    this.userAbortDiscovery = false;\n  }\n\n  async runShellCommand(deviceId, cmd) {\n    const { adb, adbClient } = this;\n\n    log.debug(`Run adb shell command on ${deviceId}: ${JSON.stringify(cmd)}`);\n\n    return wrapADBCall(async () => {\n      return await adbClient\n        .getDevice(deviceId)\n        .shell(cmd)\n        .then(adb.util.readAll);\n    }).then((res) => res.toString());\n  }\n\n  async discoverDevices() {\n    const { adbClient } = this;\n\n    let devices = [];\n\n    log.debug('Listing android devices');\n    devices = await wrapADBCall(async () => adbClient.listDevices());\n\n    return devices.map((dev) => dev.id);\n  }\n\n  async getCurrentUser(deviceId) {\n    log.debug(`Retrieving  current user on ${deviceId}`);\n\n    const currentUser = await this.runShellCommand(deviceId, [\n      'am',\n      'get-current-user',\n    ]);\n\n    const userId = parseInt(currentUser.trim());\n    if (isNaN(userId)) {\n      throw new WebExtError(`Unable to retrieve current user on ${deviceId}`);\n    }\n    return userId;\n  }\n\n  async discoverInstalledFirefoxAPKs(deviceId, firefoxApk) {\n    const userId = await this.getCurrentUser(deviceId);\n\n    log.debug(`Listing installed Firefox APKs on ${deviceId}`);\n    const pmList = await this.runShellCommand(deviceId, [\n      'pm',\n      'list',\n      'packages',\n      '--user',\n      `${userId}`,\n    ]);\n\n    return pmList\n      .split('\\n')\n      .map((line) => line.replace('package:', '').trim())\n      .filter((line) => {\n        // Look for an exact match if firefoxApk is defined.\n        if (firefoxApk) {\n          return line === firefoxApk;\n        }\n        // Match any package name that starts with the package name of a Firefox for Android browser.\n        for (const browser of packageIdentifiers) {\n          if (line.startsWith(browser)) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n  }\n\n  async amForceStopAPK(deviceId, apk) {\n    await this.runShellCommand(deviceId, ['am', 'force-stop', apk]);\n  }\n\n  async getOrCreateArtifactsDir(deviceId) {\n    let artifactsDir = this.artifactsDirMap.get(deviceId);\n\n    if (artifactsDir) {\n      return artifactsDir;\n    }\n\n    artifactsDir = `${DEVICE_DIR_BASE}${ARTIFACTS_DIR_PREFIX}${Date.now()}`;\n\n    const testDirOut = (\n      await this.runShellCommand(deviceId, `test -d ${artifactsDir} ; echo $?`)\n    ).trim();\n\n    if (testDirOut !== '1') {\n      throw new WebExtError(\n        `Cannot create artifacts directory ${artifactsDir} ` +\n          `because it exists on ${deviceId}.`,\n      );\n    }\n\n    await this.runShellCommand(deviceId, ['mkdir', '-p', artifactsDir]);\n\n    this.artifactsDirMap.set(deviceId, artifactsDir);\n\n    return artifactsDir;\n  }\n\n  async detectOrRemoveOldArtifacts(deviceId, removeArtifactDirs = false) {\n    const { adbClient } = this;\n\n    log.debug('Checking adb device for existing web-ext artifacts dirs');\n\n    return wrapADBCall(async () => {\n      const files = await adbClient\n        .getDevice(deviceId)\n        .readdir(DEVICE_DIR_BASE);\n      let found = false;\n\n      for (const file of files) {\n        if (\n          !file.isDirectory() ||\n          !file.name.startsWith(ARTIFACTS_DIR_PREFIX)\n        ) {\n          continue;\n        }\n\n        // Return earlier if we only need to warn the user that some\n        // existing artifacts dirs have been found on the adb device.\n        if (!removeArtifactDirs) {\n          return true;\n        }\n\n        found = true;\n\n        const artifactsDir = `${DEVICE_DIR_BASE}${file.name}`;\n\n        log.debug(\n          `Removing artifacts directory ${artifactsDir} from device ${deviceId}`,\n        );\n\n        await this.runShellCommand(deviceId, ['rm', '-rf', artifactsDir]);\n      }\n\n      return found;\n    });\n  }\n\n  async clearArtifactsDir(deviceId) {\n    const artifactsDir = this.artifactsDirMap.get(deviceId);\n\n    if (!artifactsDir) {\n      // nothing to do here.\n      return;\n    }\n\n    this.artifactsDirMap.delete(deviceId);\n\n    log.debug(\n      `Removing ${artifactsDir} artifacts directory on ${deviceId} device`,\n    );\n\n    await this.runShellCommand(deviceId, ['rm', '-rf', artifactsDir]);\n  }\n\n  async pushFile(deviceId, localPath, devicePath) {\n    const { adbClient } = this;\n\n    log.debug(`Pushing ${localPath} to ${devicePath} on ${deviceId}`);\n\n    await wrapADBCall(async () => {\n      await adbClient\n        .getDevice(deviceId)\n        .push(localPath, devicePath)\n        .then(function (transfer) {\n          return new Promise((resolve) => {\n            transfer.on('end', resolve);\n          });\n        });\n    });\n  }\n\n  async startFirefoxAPK(deviceId, apk, apkComponent, deviceProfileDir) {\n    const { adbClient } = this;\n\n    log.debug(`Starting ${apk} on ${deviceId}`);\n\n    // Fenix does ignore the -profile parameter, on the contrary Fennec\n    // would run using the given path as the profile to be used during\n    // this execution.\n    const extras = [\n      {\n        key: 'args',\n        value: `-profile ${deviceProfileDir}`,\n      },\n    ];\n\n    if (!apkComponent) {\n      apkComponent = '.App';\n      if (defaultApkComponents[apk]) {\n        apkComponent = defaultApkComponents[apk];\n      }\n    } else if (!apkComponent.includes('.')) {\n      apkComponent = `.${apkComponent}`;\n    }\n\n    // If `apk` is a browser package or the `apk` has a browser package prefix:\n    // prepend the package identifier before `apkComponent`.\n    if (apkComponent.startsWith('.')) {\n      for (const browser of packageIdentifiers) {\n        if (apk === browser || apk.startsWith(`${browser}.`)) {\n          apkComponent = browser + apkComponent;\n          break;\n        }\n      }\n    }\n\n    // If `apkComponent` starts with a '.', then adb will expand the following\n    // to: `${apk}/${apk}.${apkComponent}`\n    let component = `${apk}`;\n    if (apkComponent) {\n      component += `/${apkComponent}`;\n    }\n\n    await wrapADBCall(async () => {\n      try {\n        // TODO: once Fenix (release) uses Android 13, we can get rid of this\n        // call and only use the second call in the `catch` block.\n        await adbClient.getDevice(deviceId).startActivity({\n          wait: true,\n          action: 'android.activity.MAIN',\n          component,\n          extras,\n        });\n      } catch {\n        // Android 13+ requires a different action/category but we still need\n        // to support older Fenix builds.\n        await adbClient.getDevice(deviceId).startActivity({\n          wait: true,\n          action: 'android.intent.action.MAIN',\n          category: 'android.intent.category.LAUNCHER',\n          component,\n          extras,\n        });\n      }\n    });\n  }\n\n  setUserAbortDiscovery(value) {\n    this.userAbortDiscovery = value;\n  }\n\n  async discoverRDPUnixSocket(\n    deviceId,\n    apk,\n    { maxDiscoveryTime, retryInterval } = {},\n  ) {\n    let rdpUnixSockets = [];\n\n    const discoveryStartedAt = Date.now();\n    const msg =\n      `Waiting for ${apk} Remote Debugging Server...` +\n      '\\nMake sure to enable \"Remote Debugging via USB\" ' +\n      'from Settings -> Developer Tools if it is not yet enabled.';\n\n    while (rdpUnixSockets.length === 0) {\n      log.info(msg);\n      if (this.userAbortDiscovery) {\n        throw new UsageError(\n          'Exiting Firefox Remote Debugging socket discovery on user request',\n        );\n      }\n\n      if (Date.now() - discoveryStartedAt > maxDiscoveryTime) {\n        throw new WebExtError(\n          'Timeout while waiting for the Android Firefox Debugger Socket',\n        );\n      }\n\n      rdpUnixSockets = (\n        await this.runShellCommand(deviceId, ['cat', '/proc/net/unix'])\n      )\n        .split('\\n')\n        .filter((line) => {\n          // The RDP unix socket is expected to be a path in the form:\n          //   /data/data/org.mozilla.fennec_rpl/firefox-debugger-socket\n          return line.trim().endsWith(`${apk}/firefox-debugger-socket`);\n        });\n\n      if (rdpUnixSockets.length === 0) {\n        await new Promise((resolve) => setTimeout(resolve, retryInterval));\n      }\n    }\n\n    // Convert into an array of unix socket filenames.\n    rdpUnixSockets = rdpUnixSockets.map((line) => {\n      return line.trim().split(/\\s/).pop();\n    });\n\n    if (rdpUnixSockets.length > 1) {\n      throw new WebExtError(\n        'Unexpected multiple RDP sockets: ' +\n          `${JSON.stringify(rdpUnixSockets)}`,\n      );\n    }\n\n    return rdpUnixSockets[0];\n  }\n\n  async setupForward(deviceId, remote, local) {\n    const { adbClient } = this;\n\n    // TODO(rpl): we should use adb.listForwards and reuse the existing one if any (especially\n    // because adbkit doesn't seem to support `adb forward --remote` yet).\n    log.debug(`Configuring ADB forward for ${deviceId}: ${remote} -> ${local}`);\n\n    await wrapADBCall(async () => {\n      await adbClient.getDevice(deviceId).forward(local, remote);\n    });\n  }\n}\n\nexport async function listADBDevices(adbBin) {\n  const adbUtils = new ADBUtils({ adbBin });\n  return adbUtils.discoverDevices();\n}\n\nexport async function listADBFirefoxAPKs(deviceId, adbBin) {\n  const adbUtils = new ADBUtils({ adbBin });\n  return adbUtils.discoverInstalledFirefoxAPKs(deviceId);\n}\n"],"mappings":"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","ignoreList":[]}