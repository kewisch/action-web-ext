{"version":3,"file":"firefox-desktop.js","names":["MultiExtensionsReloadError","RemoteTempInstallNotSupported","WebExtError","defaultFirefoxApp","connectWithMaxRetries","defaultFirefoxConnector","createLogger","log","import","meta","url","FirefoxDesktopExtensionRunner","constructor","params","reloadableExtensions","Map","cleanupCallbacks","Set","getName","run","setupProfileDir","startFirefoxInstance","reloadAllExtensions","runnerName","reloadErrors","sourceDir","extensions","res","reloadExtensionBySourceDir","reloadError","Error","set","size","extensionSourceDir","addonId","get","remoteFirefox","reloadAddon","error","registerCleanup","fn","add","exit","runningInfo","firefox","kill","customPrefs","keepProfileChanges","preInstall","profilePath","firefoxApp","debug","profile","useProfile","copyProfile","createProfile","extension","installExtension","asProxy","extensionPath","manifestData","browserConsole","firefoxBinary","startUrl","firefoxClient","args","binaryArgs","push","urls","Array","isArray","on","cleanupCb","port","debuggerPort","installTemporaryAddon","then","installResult","addon","id","String"],"sources":["../../src/extension-runners/firefox-desktop.js"],"sourcesContent":["/* @flow */\n\n/**\n * This module provide an ExtensionRunner subclass that manage an extension executed\n * in a Firefox for Desktop instance.\n */\n\n// Import flow types from npm dependencies.\nimport type FirefoxProfile from 'firefox-profile';\n\nimport {\n  MultiExtensionsReloadError,\n  RemoteTempInstallNotSupported,\n  WebExtError,\n} from '../errors.js';\nimport * as defaultFirefoxApp from '../firefox/index.js';\nimport {\n  connectWithMaxRetries as defaultFirefoxConnector,\n} from '../firefox/remote.js';\nimport {createLogger} from '../util/logger.js';\n// Import flow types from project files.\nimport type {\n  FirefoxRDPResponseAddon,\n  RemoteFirefox,\n} from '../firefox/remote';\nimport type {\n  ExtensionRunnerParams,\n  ExtensionRunnerReloadResult,\n} from './base';\nimport type {FirefoxPreferences} from '../firefox/preferences';\nimport type {FirefoxInfo} from '../firefox/index'; // eslint-disable-line import/named\n\ntype FirefoxDesktopSpecificRunnerParams = {|\n  customPrefs?: FirefoxPreferences,\n  browserConsole: boolean,\n  firefoxBinary: string,\n  preInstall: boolean,\n\n  // Firefox desktop injected dependencies.\n  firefoxApp: typeof defaultFirefoxApp,\n  firefoxClient: typeof defaultFirefoxConnector,\n|};\n\nexport type FirefoxDesktopExtensionRunnerParams = {|\n  ...ExtensionRunnerParams,\n  // Firefox desktop CLI params.\n  ...FirefoxDesktopSpecificRunnerParams,\n|};\n\nconst log = createLogger(import.meta.url);\n\n\n/**\n * Implements an IExtensionRunner which manages a Firefox Desktop instance.\n */\nexport class FirefoxDesktopExtensionRunner {\n  cleanupCallbacks: Set<Function>;\n  params: FirefoxDesktopExtensionRunnerParams;\n  profile: FirefoxProfile;\n  // Map extensions sourceDir to their related addon ids.\n  reloadableExtensions: Map<string, string>;\n  remoteFirefox: RemoteFirefox;\n  runningInfo: FirefoxInfo;\n\n  constructor(params: FirefoxDesktopExtensionRunnerParams) {\n    this.params = params;\n\n    this.reloadableExtensions = new Map();\n    this.cleanupCallbacks = new Set();\n  }\n\n  // Method exported from the IExtensionRunner interface.\n\n  /**\n   * Returns the runner name.\n   */\n  getName(): string {\n    return 'Firefox Desktop';\n  }\n\n  /**\n   * Setup the Firefox Profile and run a Firefox Desktop instance.\n   */\n  async run(): Promise<void> {\n    // Get a firefox profile with the custom Prefs set (a new or a cloned one).\n    // Pre-install extensions as proxy if needed (and disable auto-reload if you do)\n    await this.setupProfileDir();\n\n    // (if reload is enabled):\n    // - Connect to the firefox instance on RDP\n    // - Install any extension if needed (if not installed as proxy)\n    // - Keep track of the extension id assigned in a map with the sourceDir as a key\n    await this.startFirefoxInstance();\n  }\n\n  /**\n   * Reloads all the extensions, collect any reload error and resolves to\n   * an array composed by a single ExtensionRunnerReloadResult object.\n   */\n  async reloadAllExtensions(): Promise<Array<ExtensionRunnerReloadResult>> {\n    const runnerName = this.getName();\n    const reloadErrors = new Map();\n    for (const {sourceDir} of this.params.extensions) {\n      const [res] = await this.reloadExtensionBySourceDir(sourceDir);\n      if (res.reloadError instanceof Error) {\n        reloadErrors.set(sourceDir, res.reloadError);\n      }\n    }\n\n    if (reloadErrors.size > 0) {\n      return [{\n        runnerName,\n        reloadError: new MultiExtensionsReloadError(reloadErrors),\n      }];\n    }\n\n    return [{runnerName}];\n  }\n\n  /**\n   * Reloads a single extension, collect any reload error and resolves to\n   * an array composed by a single ExtensionRunnerReloadResult object.\n   */\n  async reloadExtensionBySourceDir(\n    extensionSourceDir: string\n  ): Promise<Array<ExtensionRunnerReloadResult>> {\n    const runnerName = this.getName();\n    const addonId = this.reloadableExtensions.get(extensionSourceDir);\n\n    if (!addonId) {\n      return [{\n        sourceDir: extensionSourceDir,\n        reloadError: new WebExtError(\n          'Extension not reloadable: ' +\n          `no addonId has been mapped to \"${extensionSourceDir}\"`\n        ),\n        runnerName,\n      }];\n    }\n\n    try {\n      await this.remoteFirefox.reloadAddon(addonId);\n    } catch (error) {\n      return [{\n        sourceDir: extensionSourceDir,\n        reloadError: error,\n        runnerName,\n      }];\n    }\n\n    return [{runnerName, sourceDir: extensionSourceDir}];\n  }\n\n  /**\n   * Register a callback to be called when the runner has been exited\n   * (e.g. the Firefox instance exits or the user has requested web-ext\n   * to exit).\n   */\n  registerCleanup(fn: Function): void {\n    this.cleanupCallbacks.add(fn);\n  }\n\n  /**\n   * Exits the runner, by closing the managed Firefox instance.\n   */\n  async exit(): Promise<void> {\n    if (!this.runningInfo || !this.runningInfo.firefox) {\n      throw new WebExtError('No firefox instance is currently running');\n    }\n\n    this.runningInfo.firefox.kill();\n  }\n\n  // Private helper methods.\n\n  async setupProfileDir() {\n    const {\n      customPrefs,\n      extensions,\n      keepProfileChanges,\n      preInstall,\n      profilePath,\n      firefoxApp,\n    } = this.params;\n\n    if (profilePath) {\n      if (keepProfileChanges) {\n        log.debug(`Using Firefox profile from ${profilePath}`);\n        this.profile = await firefoxApp.useProfile(profilePath, {customPrefs});\n      } else {\n        log.debug(`Copying Firefox profile from ${profilePath}`);\n        this.profile = await firefoxApp.copyProfile(profilePath, {customPrefs});\n      }\n    } else {\n      log.debug('Creating new Firefox profile');\n      this.profile = await firefoxApp.createProfile({customPrefs});\n    }\n\n    // preInstall the extensions if needed.\n    if (preInstall) {\n      for (const extension of extensions) {\n        await firefoxApp.installExtension({\n          asProxy: true,\n          extensionPath: extension.sourceDir,\n          manifestData: extension.manifestData,\n          profile: this.profile,\n        });\n      }\n    }\n  }\n\n  async startFirefoxInstance() {\n    const {\n      browserConsole,\n      extensions,\n      firefoxBinary,\n      preInstall,\n      startUrl,\n      firefoxApp,\n      firefoxClient,\n      args,\n    } = this.params;\n\n    const binaryArgs = [];\n\n    if (browserConsole) {\n      binaryArgs.push('-jsconsole');\n    }\n    if (startUrl) {\n      const urls = Array.isArray(startUrl) ? startUrl : [startUrl];\n      for (const url of urls) {\n        binaryArgs.push('--url', url);\n      }\n    }\n\n    if (args) {\n      binaryArgs.push(...args);\n    }\n\n    this.runningInfo = await firefoxApp.run(this.profile, {\n      firefoxBinary,\n      binaryArgs,\n      extensions,\n    });\n\n    this.runningInfo.firefox.on('close', () => {\n      for (const cleanupCb of this.cleanupCallbacks) {\n        try {\n          cleanupCb();\n        } catch (error) {\n          log.error(`Exception on executing cleanup callback: ${error}`);\n        }\n      }\n    });\n\n    if (!preInstall) {\n      const remoteFirefox = this.remoteFirefox = await firefoxClient({\n        port: this.runningInfo.debuggerPort,\n      });\n\n      // Install all the temporary addons.\n      for (const extension of extensions) {\n        try {\n          const addonId = await (\n            remoteFirefox.installTemporaryAddon(extension.sourceDir)\n              .then((installResult: FirefoxRDPResponseAddon) => {\n                return installResult.addon.id;\n              })\n          );\n\n          if (!addonId) {\n            throw new WebExtError(\n              'Unexpected missing addonId in the installAsTemporaryAddon result'\n            );\n          }\n\n          this.reloadableExtensions.set(extension.sourceDir, addonId);\n        } catch (error) {\n          if (error instanceof RemoteTempInstallNotSupported) {\n            log.debug(`Caught: ${String(error)}`);\n            throw new WebExtError(\n              'Temporary add-on installation is not supported in this version' +\n              ' of Firefox (you need Firefox 49 or higher). For older Firefox' +\n              ' versions, use --pre-install'\n            );\n          } else {\n            throw error;\n          }\n        }\n      }\n    }\n  }\n}\n"],"mappings":"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"}