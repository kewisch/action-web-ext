{"version":3,"file":"index.js","names":["readline","WebExtError","showDesktopNotification","defaultDesktopNotifications","createLogger","createFileFilter","defaultFileFilterCreator","isTTY","setRawMode","defaultSourceWatcher","log","import","meta","url","createExtensionRunner","config","target","FirefoxDesktopExtensionRunner","params","FirefoxAndroidExtensionRunner","ChromiumExtensionRunner","MultiExtensionRunner","constructor","extensionRunners","runners","desktopNotifications","getName","run","promises","runner","push","Promise","all","reloadAllExtensions","debug","reloadPromise","then","runnerName","error","reloadError","results","handleReloadResults","reloadExtensionBySourceDir","sourceDir","registerCleanup","cleanupCallback","resolve","exit","Error","message","stack","title","defaultWatcherCreator","reloadExtension","watchFile","watchIgnored","artifactsDir","ignoreFiles","onSourceChange","fileFilter","onChange","shouldWatchFile","file","wantFile","defaultReloadStrategy","extensionRunner","noInput","createWatcher","stdin","process","kill","allowInput","watcher","watchedSourceDir","close","pause","emitKeypressEvents","keypressUsageInfo","info","userExit","keyPressed","once","str","key","ctrl","name","pid","catch","err","warn"],"sources":["../../src/extension-runners/index.js"],"sourcesContent":["/* @flow */\n\nimport readline from 'readline';\n\nimport type Watchpack from 'watchpack';\n\nimport type {\n  IExtensionRunner, // eslint-disable-line import/named\n  ExtensionRunnerReloadResult,\n} from './base';\nimport {WebExtError} from '../errors.js';\nimport {\n  showDesktopNotification as defaultDesktopNotifications,\n} from '../util/desktop-notifier.js';\nimport type {FirefoxAndroidExtensionRunnerParams} from './firefox-android.js';\nimport type {FirefoxDesktopExtensionRunnerParams} from './firefox-desktop.js';\nimport type {ChromiumExtensionRunnerParams} from './chromium.js';\nimport {createLogger} from '../util/logger.js';\nimport type {FileFilterCreatorFn} from '../util/file-filter.js';\nimport {\n  createFileFilter as defaultFileFilterCreator,\n} from '../util/file-filter.js';\nimport {\n  isTTY, setRawMode,\n} from '../util/stdin.js';\nimport defaultSourceWatcher from '../watcher.js';\nimport type {OnSourceChangeFn} from '../watcher';\n\nconst log = createLogger(import.meta.url);\n\nexport type ExtensionRunnerConfig = {|\n  target: 'firefox-desktop',\n  params: FirefoxDesktopExtensionRunnerParams,\n|} | {|\n  target: 'firefox-android',\n  params: FirefoxAndroidExtensionRunnerParams,\n|} | {|\n  target: 'chromium',\n  params: ChromiumExtensionRunnerParams,\n|};\n\nexport type MultiExtensionRunnerParams = {|\n  runners: Array<IExtensionRunner>,\n  desktopNotifications: typeof defaultDesktopNotifications,\n|};\n\nexport async function createExtensionRunner(\n  config: ExtensionRunnerConfig\n): Promise<IExtensionRunner> {\n  switch (config.target) {\n    case 'firefox-desktop': {\n      const {\n        FirefoxDesktopExtensionRunner,\n      } = await import('./firefox-desktop.js');\n      return new FirefoxDesktopExtensionRunner(config.params);\n    }\n    case 'firefox-android': {\n      const {\n        FirefoxAndroidExtensionRunner,\n      } = await import('./firefox-android.js');\n      return new FirefoxAndroidExtensionRunner(config.params);\n    }\n    case 'chromium': {\n      const {ChromiumExtensionRunner} = await import('./chromium.js');\n      return new ChromiumExtensionRunner(config.params);\n    }\n    default:\n      throw new WebExtError(`Unknown target: \"${config.target}\"`);\n  }\n}\n\n/**\n * Implements an IExtensionRunner which allow the caller to\n * manage multiple extension runners at the same time (e.g. by running\n * a Firefox Desktop instance alongside to a Firefox for Android instance).\n */\nexport class MultiExtensionRunner {\n  extensionRunners: Array<IExtensionRunner>;\n  desktopNotifications: typeof defaultDesktopNotifications;\n\n  constructor(params: MultiExtensionRunnerParams) {\n    this.extensionRunners = params.runners;\n    this.desktopNotifications = params.desktopNotifications;\n  }\n\n  // Method exported from the IExtensionRunner interface.\n\n  /**\n   * Returns the runner name.\n   */\n  getName(): string {\n    return 'Multi Extension Runner';\n  }\n\n  /**\n   * Call the `run` method on all the managed extension runners,\n   * and awaits that all the runners has been successfully started.\n   */\n  async run(): Promise<void> {\n    const promises = [];\n    for (const runner of this.extensionRunners) {\n      promises.push(runner.run());\n    }\n\n    await Promise.all(promises);\n  }\n\n  /**\n   * Reloads all the extensions on all the managed extension runners,\n   * collect any reload error, and resolves to an array composed by\n   * a ExtensionRunnerReloadResult object per managed runner.\n   *\n   * Any detected reload error is also logged on the terminal and shows as a\n   * desktop notification.\n   */\n  async reloadAllExtensions(): Promise<Array<ExtensionRunnerReloadResult>> {\n    log.debug('Reloading all reloadable add-ons');\n\n    const promises = [];\n    for (const runner of this.extensionRunners) {\n      const reloadPromise = runner.reloadAllExtensions().then(\n        () => {\n          return {runnerName: runner.getName()};\n        },\n        (error) => {\n          return {\n            runnerName: runner.getName(),\n            reloadError: error,\n          };\n        }\n      );\n\n      promises.push(reloadPromise);\n    }\n\n    return await Promise.all(promises).then((results) => {\n      this.handleReloadResults(results);\n      return results;\n    });\n  }\n\n  /**\n   * Reloads a single extension on all the managed extension runners,\n   * collect any reload error and resolves to an array composed by\n   * a ExtensionRunnerReloadResult object per managed runner.\n   *\n   * Any detected reload error is also logged on the terminal and shows as a\n   * desktop notification.\n   */\n  async reloadExtensionBySourceDir(\n    sourceDir: string\n  ): Promise<Array<ExtensionRunnerReloadResult>> {\n    log.debug(`Reloading add-on at ${sourceDir}`);\n\n    const promises: Array<Promise<ExtensionRunnerReloadResult>> = [];\n    for (const runner of this.extensionRunners) {\n      const reloadPromise = runner.reloadExtensionBySourceDir(sourceDir).then(\n        () => {\n          return {runnerName: runner.getName(), sourceDir};\n        },\n        (error) => {\n          return {\n            runnerName: runner.getName(),\n            reloadError: error,\n            sourceDir,\n          };\n        }\n      );\n\n      promises.push(reloadPromise);\n    }\n\n    return await Promise.all(promises).then((results) => {\n      this.handleReloadResults(results);\n      return results;\n    });\n  }\n\n  /**\n   * Register a callback to be called when all the managed runners has been exited.\n   */\n  registerCleanup(cleanupCallback: Function): void {\n    const promises = [];\n\n    // Create a promise for every extension runner managed by this instance,\n    // the promise will be resolved when the particular runner calls its\n    // registered cleanup callbacks.\n    for (const runner of this.extensionRunners) {\n      promises.push(new Promise((resolve) => {\n        runner.registerCleanup(resolve);\n      }));\n    }\n\n    // Wait for all the created promises to be resolved or rejected\n    // (once each one of the runners has cleaned up) and then call\n    // the cleanup callback registered to this runner.\n    Promise.all(promises).then(cleanupCallback, cleanupCallback);\n  }\n\n  /**\n   * Exits all the managed runner has been exited.\n   */\n  async exit(): Promise<void> {\n    const promises = [];\n    for (const runner of this.extensionRunners) {\n      promises.push(runner.exit());\n    }\n\n    await Promise.all(promises);\n  }\n\n  // Private helper methods.\n\n  handleReloadResults(results: Array<ExtensionRunnerReloadResult>): void {\n    for (const {runnerName, reloadError, sourceDir} of results) {\n      if (reloadError instanceof Error) {\n        let message = 'Error occurred while reloading';\n        if (sourceDir) {\n          message += ` \"${sourceDir}\" `;\n        }\n\n        message += `on \"${runnerName}\" - ${reloadError.message}`;\n\n        log.error(`\\n${message}`);\n        log.debug(reloadError.stack);\n\n        this.desktopNotifications({\n          title: 'web-ext run: extension reload error',\n          message,\n        });\n      }\n    }\n  }\n}\n\n// defaultWatcherCreator types and implementation.\n\nexport type WatcherCreatorParams = {|\n  reloadExtension: (string) => void,\n  sourceDir: string,\n  watchFile?: Array<string>,\n  watchIgnored?: Array<string>,\n  artifactsDir: string,\n  onSourceChange?: OnSourceChangeFn,\n  ignoreFiles?: Array<string>,\n  createFileFilter?: FileFilterCreatorFn,\n|};\n\nexport type WatcherCreatorFn = (params: WatcherCreatorParams) => Watchpack;\n\nexport function defaultWatcherCreator(\n  {\n    reloadExtension, sourceDir, watchFile,\n    watchIgnored, artifactsDir, ignoreFiles,\n    onSourceChange = defaultSourceWatcher,\n    createFileFilter = defaultFileFilterCreator,\n  }: WatcherCreatorParams\n): Watchpack {\n  const fileFilter = createFileFilter(\n    {sourceDir, artifactsDir, ignoreFiles}\n  );\n  return onSourceChange({\n    sourceDir,\n    watchFile,\n    watchIgnored,\n    artifactsDir,\n    onChange: () => reloadExtension(sourceDir),\n    shouldWatchFile: (file) => fileFilter.wantFile(file),\n  });\n}\n\n\n// defaultReloadStrategy types and implementation.\n\nexport type ReloadStrategyParams = {|\n  extensionRunner: IExtensionRunner,\n  sourceDir: string,\n  watchFile?: Array<string>,\n  watchIgnored?: Array<string>,\n  artifactsDir: string,\n  ignoreFiles?: Array<string>,\n  noInput?: boolean,\n|};\n\nexport type ReloadStrategyOptions = {\n  createWatcher?: WatcherCreatorFn,\n  stdin?: stream$Readable,\n  kill?: (pid: number, signal?: string | number) => void,\n};\n\nexport function defaultReloadStrategy(\n  {\n    artifactsDir,\n    extensionRunner,\n    ignoreFiles,\n    noInput = false,\n    sourceDir,\n    watchFile,\n    watchIgnored,\n  }: ReloadStrategyParams,\n  {\n    createWatcher = defaultWatcherCreator,\n    stdin = process.stdin,\n    // $FlowIgnore: ignore method-unbinding.\n    kill = process.kill,\n  }: ReloadStrategyOptions = {}\n): void {\n  const allowInput = !noInput;\n  if (!allowInput) {\n    log.debug('Input has been disabled because of noInput==true');\n  }\n\n  const watcher: Watchpack = createWatcher({\n    reloadExtension: (watchedSourceDir) => {\n      extensionRunner.reloadExtensionBySourceDir(watchedSourceDir);\n    },\n    sourceDir,\n    watchFile,\n    watchIgnored,\n    artifactsDir,\n    ignoreFiles,\n  });\n\n  extensionRunner.registerCleanup(() => {\n    watcher.close();\n    if (allowInput) {\n      stdin.pause();\n    }\n  });\n\n  if (allowInput && isTTY(stdin)) {\n    readline.emitKeypressEvents(stdin);\n    setRawMode(stdin, true);\n\n    const keypressUsageInfo = 'Press R to reload (and Ctrl-C to quit)';\n\n    // NOTE: this `Promise.resolve().then(...)` is basically used to spawn a \"co-routine\"\n    // that is executed before the callback attached to the Promise returned by this function\n    // (and it allows the `run` function to not be stuck in the while loop).\n    Promise.resolve().then(async function() {\n      log.info(keypressUsageInfo);\n\n      let userExit = false;\n\n      while (!userExit) {\n        const keyPressed = await new Promise((resolve) => {\n          stdin.once('keypress', (str, key) => resolve(key));\n        });\n\n        if (keyPressed.ctrl && keyPressed.name === 'c') {\n          userExit = true;\n        } else if (keyPressed.name === 'z') {\n          // Prepare to suspend.\n\n          // NOTE: Switch the raw mode off before suspending (needed to make the keypress event\n          // to work correctly when the nodejs process is resumed).\n          setRawMode(stdin, false);\n\n          log.info('\\nweb-ext has been suspended on user request');\n          kill(process.pid, 'SIGTSTP');\n\n          // Prepare to resume.\n\n          log.info(`\\nweb-ext has been resumed. ${keypressUsageInfo}`);\n\n          // Switch the raw mode on on resume.\n          setRawMode(stdin, true);\n        } else if (keyPressed.name === 'r') {\n          log.debug('Reloading installed extensions on user request');\n          await extensionRunner.reloadAllExtensions().catch((err) => {\n            log.warn(`\\nError reloading extension: ${err}`);\n            log.debug(`Reloading extension error stack: ${err.stack}`);\n          });\n        }\n      }\n\n      log.info('\\nExiting web-ext on user request');\n      extensionRunner.exit();\n    });\n  }\n}\n"],"mappings":"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"}