{"version":3,"file":"config.js","names":["os","path","importFresh","camelCase","decamelize","fileExists","createLogger","UsageError","WebExtError","log","import","meta","url","applyConfigToArgv","argv","argvFromCLI","configObject","options","configFileName","newArgv","option","Object","keys","Array","isArray","decamelizedOptName","separator","type","undefined","expectedType","optionType","defaultValue","default","wasValueSetOnCLI","debug","coerce","loadJSConfigFile","filePath","resolvedFilePath","resolve","error","message","endsWith","webExt","length","discoverConfigFiles","getHomeDir","homedir","magicConfigName","possibleConfigs","join","process","cwd","configs","Promise","all","map","fileName","resolvedFileName","existingConfigs","forEach","f","push"],"sources":["../src/config.js"],"sourcesContent":["/* @flow */\nimport os from 'os';\nimport path from 'path';\n\nimport importFresh from 'import-fresh';\nimport camelCase from 'camelcase';\nimport decamelize from 'decamelize';\n\nimport fileExists from './util/file-exists.js';\nimport {createLogger} from './util/logger.js';\nimport {UsageError, WebExtError} from './errors.js';\n\nconst log = createLogger(import.meta.url);\n\ntype ApplyConfigToArgvParams = {|\n  // This is the argv object which will get updated by each\n  // config applied.\n  argv: Object,\n  // This is the argv that only has CLI values applied to it.\n  argvFromCLI: Object,\n  configObject: Object,\n  options: Object,\n  configFileName: string,\n|};\n\nexport function applyConfigToArgv({\n  argv,\n  argvFromCLI,\n  configObject,\n  options,\n  configFileName,\n}: ApplyConfigToArgvParams): Object {\n  let newArgv = {...argv};\n\n  for (const option of Object.keys(configObject)) {\n    if (camelCase(option) !== option) {\n      throw new UsageError(\n        `The config option \"${option}\" must be ` +\n        `specified in camel case: \"${camelCase(option)}\"`);\n    }\n\n    // A config option cannot be a sub-command config\n    // object if it is an array.\n    if (!Array.isArray(configObject[option]) &&\n      typeof options[option] === 'object' &&\n      typeof configObject[option] === 'object') {\n      // Descend into the nested configuration for a sub-command.\n      newArgv = applyConfigToArgv({\n        argv: newArgv,\n        argvFromCLI,\n        configObject: configObject[option],\n        options: options[option],\n        configFileName});\n      continue;\n    }\n\n    const decamelizedOptName = decamelize(option, {separator: '-'});\n\n    if (typeof options[decamelizedOptName] !== 'object') {\n      throw new UsageError(`The config file at ${configFileName} specified ` +\n        `an unknown option: \"${option}\"`);\n    }\n    if (options[decamelizedOptName].type === undefined) {\n      // This means yargs option type wasn't not defined correctly\n      throw new WebExtError(\n        `Option: ${option} was defined without a type.`);\n    }\n\n    const expectedType = options[decamelizedOptName].type ===\n      'count' ? 'number' : options[decamelizedOptName].type;\n\n    const optionType = (\n      Array.isArray(configObject[option]) ?\n        'array' : typeof configObject[option]\n    );\n\n    if (optionType !== expectedType) {\n      throw new UsageError(`The config file at ${configFileName} specified ` +\n        `the type of \"${option}\" incorrectly as \"${optionType}\"` +\n        ` (expected type \"${expectedType}\")`);\n    }\n\n    let defaultValue;\n    if (options[decamelizedOptName]) {\n      if (options[decamelizedOptName].default !== undefined) {\n        defaultValue = options[decamelizedOptName].default;\n      } else if (expectedType === 'boolean') {\n        defaultValue = false;\n      }\n    }\n\n    // This is our best effort (without patching yargs) to detect\n    // if a value was set on the CLI instead of in the config.\n    // It looks for a default value and if the argv value is\n    // different, it assumes that the value was configured on the CLI.\n\n    const wasValueSetOnCLI =\n      typeof argvFromCLI[option] !== 'undefined' &&\n      argvFromCLI[option] !== defaultValue;\n    if (wasValueSetOnCLI) {\n      log.debug(\n        `Favoring CLI: ${option}=${argvFromCLI[option]} over ` +\n        `configuration: ${option}=${configObject[option]}`);\n      newArgv[option] = argvFromCLI[option];\n      continue;\n    }\n\n    newArgv[option] = configObject[option];\n\n    const coerce = options[decamelizedOptName].coerce;\n    if (coerce) {\n      log.debug(\n        `Calling coerce() on configured value for ${option}`);\n      newArgv[option] = coerce(newArgv[option]);\n    }\n\n    newArgv[decamelizedOptName] = newArgv[option];\n  }\n  return newArgv;\n}\n\nexport function loadJSConfigFile(filePath: string): Object {\n  const resolvedFilePath = path.resolve(filePath);\n  log.debug(\n    `Loading JS config file: \"${filePath}\" ` +\n    `(resolved to \"${resolvedFilePath}\")`);\n  let configObject;\n  try {\n    configObject = importFresh(resolvedFilePath);\n  } catch (error) {\n    log.debug('Handling error:', error);\n    throw new UsageError(\n      `Cannot read config file: ${resolvedFilePath}\\n` +\n      `Error: ${error.message}`);\n  }\n  if (filePath.endsWith('package.json')) {\n    log.debug('Looking for webExt key inside package.json file');\n    configObject = configObject.webExt || {};\n  }\n  if (Object.keys(configObject).length === 0) {\n    log.debug(`Config file ${resolvedFilePath} did not define any options. ` +\n      'Did you set module.exports = {...}?');\n  }\n  return configObject;\n}\n\ntype DiscoverConfigFilesParams = {\n  getHomeDir: () => string,\n};\n\nexport async function discoverConfigFiles(\n  {getHomeDir = os.homedir}: DiscoverConfigFilesParams = {}\n): Promise<Array<string>> {\n  const magicConfigName = 'web-ext-config.js';\n\n  // Config files will be loaded in this order.\n  const possibleConfigs = [\n    // Look for a magic hidden config (preceded by dot) in home dir.\n    path.join(getHomeDir(), `.${magicConfigName}`),\n    // Look for webExt key inside package.json file\n    path.join(process.cwd(), 'package.json'),\n    // Look for a magic config in the current working directory.\n    path.join(process.cwd(), magicConfigName),\n  ];\n\n  const configs = await Promise.all(possibleConfigs.map(\n    async (fileName) => {\n      const resolvedFileName = path.resolve(fileName);\n      if (await fileExists(resolvedFileName)) {\n        return resolvedFileName;\n      } else {\n        log.debug(\n          `Discovered config \"${resolvedFileName}\" does not ` +\n          'exist or is not readable');\n        return undefined;\n      }\n    }\n  ));\n\n  const existingConfigs = [];\n  configs.forEach((f) => {\n    if (typeof f === 'string') {\n      existingConfigs.push(f);\n    }\n  });\n  return existingConfigs;\n}\n"],"mappings":"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"}