{"version":3,"file":"sign.js","names":["path","fs","signAddon","defaultAddonSigner","defaultBuilder","getValidatedManifest","getManifestId","withTempDir","isErrorWithCode","UsageError","WebExtError","prepareArtifactsDir","createLogger","log","import","meta","url","defaultAsyncFsReadFile","readFile","bind","extensionIdFile","sign","apiKey","apiProxy","apiSecret","apiUrlPrefix","artifactsDir","id","ignoreFiles","sourceDir","timeout","verbose","channel","build","preValidatedManifest","tmpDir","manifestData","buildResult","idFromSourceDir","Promise","all","showReadyMessage","getIdFromSourceDir","manifestId","debug","info","warn","signingResult","xpiPath","extensionPath","version","downloadDir","saveIdToSourceDir","success","asyncFsReadFile","filePath","join","content","error","lines","toString","split","filter","line","trim","startsWith","writeFile"],"sources":["../../src/cmd/sign.js"],"sourcesContent":["/* @flow */\nimport path from 'path';\n\nimport {fs} from 'mz';\nimport {signAddon as defaultAddonSigner} from 'sign-addon';\n\nimport defaultBuilder from './build.js';\nimport getValidatedManifest, {getManifestId} from '../util/manifest.js';\nimport {withTempDir} from '../util/temp-dir.js';\nimport {isErrorWithCode, UsageError, WebExtError} from '../errors.js';\nimport {prepareArtifactsDir} from '../util/artifacts.js';\nimport {createLogger} from '../util/logger.js';\nimport type {ExtensionManifest} from '../util/manifest.js';\n\nconst log = createLogger(import.meta.url);\n\nconst defaultAsyncFsReadFile: (string) => Promise<Buffer> =\n  fs.readFile.bind(fs);\n\nexport const extensionIdFile = '.web-extension-id';\n\n// Sign command types and implementation.\n\nexport type SignParams = {|\n  apiKey: string,\n  apiProxy: string,\n  apiSecret: string,\n  apiUrlPrefix: string,\n  artifactsDir: string,\n  id?: string,\n  ignoreFiles?: Array<string>,\n  sourceDir: string,\n  timeout: number,\n  verbose?: boolean,\n  channel?: string,\n|};\n\nexport type SignOptions = {\n  build?: typeof defaultBuilder,\n  signAddon?: typeof defaultAddonSigner,\n  preValidatedManifest?: ExtensionManifest,\n  shouldExitProgram?: boolean,\n};\n\nexport type SignResult = {|\n  success: boolean,\n  id: string,\n  downloadedFiles: Array<string>,\n|};\n\nexport default function sign(\n  {\n    apiKey,\n    apiProxy,\n    apiSecret,\n    apiUrlPrefix,\n    artifactsDir,\n    id,\n    ignoreFiles = [],\n    sourceDir,\n    timeout,\n    verbose,\n    channel,\n  }: SignParams,\n  {\n    build = defaultBuilder,\n    preValidatedManifest,\n    signAddon = defaultAddonSigner,\n  }: SignOptions = {}\n): Promise<SignResult> {\n  return withTempDir(\n    async function(tmpDir) {\n      await prepareArtifactsDir(artifactsDir);\n\n      let manifestData;\n\n      if (preValidatedManifest) {\n        manifestData = preValidatedManifest;\n      } else {\n        manifestData = await getValidatedManifest(sourceDir);\n      }\n\n      const [buildResult, idFromSourceDir] = await Promise.all([\n        build({sourceDir, ignoreFiles, artifactsDir: tmpDir.path()},\n              {manifestData, showReadyMessage: false}),\n        getIdFromSourceDir(sourceDir),\n      ]);\n\n      const manifestId = getManifestId(manifestData);\n\n      if (id && manifestId) {\n        throw new UsageError(\n          `Cannot set custom ID ${id} because manifest.json ` +\n          `declares ID ${manifestId}`);\n      }\n      if (id) {\n        log.debug(`Using custom ID declared as --id=${id}`);\n      }\n\n      if (manifestId) {\n        id = manifestId;\n      }\n\n      if (!id && idFromSourceDir) {\n        log.info(\n          `Using previously auto-generated extension ID: ${idFromSourceDir}`);\n        id = idFromSourceDir;\n      }\n\n      if (!id) {\n        log.warn('No extension ID specified (it will be auto-generated)');\n      }\n\n      const signingResult = await signAddon({\n        apiKey,\n        apiSecret,\n        apiUrlPrefix,\n        apiProxy,\n        timeout,\n        verbose,\n        id,\n        xpiPath: buildResult.extensionPath,\n        version: manifestData.version,\n        downloadDir: artifactsDir,\n        channel,\n      });\n\n      if (signingResult.id) {\n        await saveIdToSourceDir(sourceDir, signingResult.id);\n      }\n\n      // All information about the downloaded files would have\n      // already been logged by signAddon().\n      if (signingResult.success) {\n        log.info(`Extension ID: ${signingResult.id}`);\n        log.info('SUCCESS');\n      } else {\n        log.info('FAIL');\n        throw new WebExtError(\n          'The extension could not be signed');\n      }\n\n      return signingResult;\n    }\n  );\n}\n\n\nexport async function getIdFromSourceDir(\n  sourceDir: string,\n  asyncFsReadFile: typeof defaultAsyncFsReadFile = defaultAsyncFsReadFile,\n): Promise<string | void> {\n  const filePath = path.join(sourceDir, extensionIdFile);\n\n  let content;\n\n  try {\n    content = await asyncFsReadFile(filePath);\n  } catch (error) {\n    if (isErrorWithCode('ENOENT', error)) {\n      log.debug(`No ID file found at: ${filePath}`);\n      return;\n    }\n    throw error;\n  }\n\n  let lines = content.toString().split('\\n');\n  lines = lines.filter((line) => {\n    line = line.trim();\n    if (line && !line.startsWith('#')) {\n      return line;\n    }\n  });\n\n  const id = lines[0];\n  log.debug(`Found extension ID ${id} in ${filePath}`);\n\n  if (!id) {\n    throw new UsageError(`No ID found in extension ID file ${filePath}`);\n  }\n\n  return id;\n}\n\n\nexport async function saveIdToSourceDir(\n  sourceDir: string, id: string\n): Promise<void> {\n  const filePath = path.join(sourceDir, extensionIdFile);\n  await fs.writeFile(filePath, [\n    '# This file was created by https://github.com/mozilla/web-ext',\n    '# Your auto-generated extension ID for addons.mozilla.org is:',\n    id.toString(),\n  ].join('\\n'));\n\n  log.debug(`Saved auto-generated ID ${id} to ${filePath}`);\n}\n"],"mappings":"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"}