import { createInstance as defaultLinterCreator } from 'addons-linter';
import { createLogger } from '../util/logger.js';
import { createFileFilter as defaultFileFilterCreator } from '../util/file-filter.js'; // import flow types

const log = createLogger(import.meta.url); // Define the needed 'addons-linter' module flow types.

export default function lint({
  artifactsDir,
  boring,
  ignoreFiles,
  metadata,
  output,
  pretty,
  privileged,
  sourceDir,
  selfHosted,
  verbose,
  warningsAsErrors
}, {
  createLinter = defaultLinterCreator,
  createFileFilter = defaultFileFilterCreator,
  shouldExitProgram = true
} = {}) {
  const fileFilter = createFileFilter({
    sourceDir,
    ignoreFiles,
    artifactsDir
  });
  log.debug(`Running addons-linter on ${sourceDir}`);
  const linter = createLinter({
    config: {
      logLevel: verbose ? 'debug' : 'fatal',
      stack: Boolean(verbose),
      pretty,
      privileged,
      warningsAsErrors,
      metadata,
      output,
      boring,
      selfHosted,
      shouldScanFile: fileName => fileFilter.wantFile(fileName),
      // This mimics the first command line argument from yargs,
      // which should be the directory to the extension.
      _: [sourceDir]
    },
    runAsBinary: shouldExitProgram
  });
  return linter.run();
}
//# sourceMappingURL=lint.js.map