{"version":3,"file":"build.js","names":["path","createWriteStream","fs","parseJSON","stripBom","defaultFromEvent","zipDir","defaultSourceWatcher","getValidatedManifest","getManifestId","prepareArtifactsDir","createLogger","UsageError","isErrorWithCode","createFileFilter","defaultFileFilterCreator","FileFilter","log","import","meta","url","DEFAULT_FILENAME_TEMPLATE","safeFileName","name","toLowerCase","replace","getDefaultLocalizedName","messageFile","manifestData","messageData","messageContents","extensionName","readFile","encoding","error","default","stripJsonComments","match","messageName","message","Promise","resolve","getStringPropertyValue","prop","obj","properties","split","value","reduce","prev","curr","includes","stringValue","length","getPackageNameFromTemplate","filenameTemplate","packageName","manifestProperty","parsed","parse","dir","ext","defaultPackageCreator","sourceDir","fileFilter","artifactsDir","overwriteDest","showReadyMessage","filename","fromEvent","id","debug","buffer","filter","args","wantFile","default_locale","join","extensionPath","stream","flags","write","end","info","overwriteStream","build","asNeeded","ignoreFiles","onSourceChange","packageCreator","rebuildAsNeeded","createPackage","result","onChange","catch","stack","shouldWatchFile"],"sources":["../../src/cmd/build.js"],"sourcesContent":["/* @flow */\nimport path from 'path';\nimport {createWriteStream} from 'fs';\n\nimport {fs} from 'mz';\nimport parseJSON from 'parse-json';\nimport stripBom from 'strip-bom';\nimport defaultFromEvent from 'promise-toolbox/fromEvent';\nimport zipDir from 'zip-dir';\n\nimport defaultSourceWatcher from '../watcher.js';\nimport getValidatedManifest, {getManifestId} from '../util/manifest.js';\nimport {prepareArtifactsDir} from '../util/artifacts.js';\nimport {createLogger} from '../util/logger.js';\nimport {UsageError, isErrorWithCode} from '../errors.js';\nimport {\n  createFileFilter as defaultFileFilterCreator,\n  FileFilter,\n} from '../util/file-filter.js';\n// Import flow types.\nimport type {OnSourceChangeFn} from '../watcher.js';\nimport type {ExtensionManifest} from '../util/manifest.js';\nimport type {FileFilterCreatorFn} from '../util/file-filter.js';\n\nconst log = createLogger(import.meta.url);\nconst DEFAULT_FILENAME_TEMPLATE = '{name}-{version}.zip';\n\nexport function safeFileName(name: string): string {\n  return name.toLowerCase().replace(/[^a-z0-9.-]+/g, '_');\n}\n\n\n// defaultPackageCreator types and implementation.\n\nexport type ExtensionBuildResult = {|\n  extensionPath: string,\n|};\n\nexport type PackageCreatorParams = {|\n  manifestData?: ExtensionManifest,\n  sourceDir: string,\n  fileFilter: FileFilter,\n  artifactsDir: string,\n  overwriteDest: boolean,\n  showReadyMessage: boolean,\n  filename?: string,\n|};\n\nexport type LocalizedNameParams = {|\n  messageFile: string,\n  manifestData: ExtensionManifest,\n|}\n\nexport type PackageCreatorOptions = {\n  fromEvent: typeof defaultFromEvent,\n};\n\n// This defines the _locales/messages.json type. See:\n// https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Internationalization#Providing_localized_strings_in__locales\ntype LocalizedMessageData = {|\n  [messageName: string]: {|\n    description: string,\n    message: string,\n  |},\n|}\n\nexport async function getDefaultLocalizedName(\n  {messageFile, manifestData}: LocalizedNameParams\n): Promise<string> {\n\n  let messageData: LocalizedMessageData;\n  let messageContents: string | Buffer;\n  let extensionName: string = manifestData.name;\n\n  try {\n    messageContents = await fs.readFile(messageFile, {encoding: 'utf-8'});\n  } catch (error) {\n    throw new UsageError(\n      `Error reading messages.json file at ${messageFile}: ${error}`);\n  }\n\n  messageContents = stripBom(messageContents);\n\n  const {default: stripJsonComments } = await import('strip-json-comments');\n  try {\n    messageData = parseJSON(stripJsonComments(messageContents));\n  } catch (error) {\n    throw new UsageError(\n      `Error parsing messages.json file at ${messageFile}: ${error}`);\n  }\n\n  extensionName = manifestData.name.replace(\n    /__MSG_([A-Za-z0-9@_]+?)__/g,\n    (match, messageName) => {\n      if (!(messageData[messageName]\n            && messageData[messageName].message)) {\n        const error = new UsageError(\n          `The locale file ${messageFile} ` +\n            `is missing key: ${messageName}`);\n        throw error;\n      } else {\n        return messageData[messageName].message;\n      }\n    });\n  return Promise.resolve(extensionName);\n}\n\n// https://stackoverflow.com/a/22129960\nexport function getStringPropertyValue(\n  prop: string,\n  obj: Object,\n): string {\n  const properties = prop.split('.');\n  const value = properties.reduce((prev, curr) => prev && prev[curr], obj);\n  if (!['string', 'number'].includes(typeof value)) {\n    throw new UsageError(\n      `Manifest key \"${prop}\" is missing or has an invalid type: ${value}`\n    );\n  }\n  const stringValue = `${value}`;\n  if (!stringValue.length) {\n    throw new UsageError(`Manifest key \"${prop}\" value is an empty string`);\n  }\n  return stringValue;\n}\n\nfunction getPackageNameFromTemplate(\n  filenameTemplate: string,\n  manifestData: ExtensionManifest\n): string {\n  const packageName = filenameTemplate.replace(\n    /{([A-Za-z0-9._]+?)}/g,\n    (match, manifestProperty) => {\n      return safeFileName(\n        getStringPropertyValue(manifestProperty, manifestData));\n    }\n  );\n\n  // Validate the resulting packageName string, after interpolating the manifest property\n  // specified in the template string.\n  const parsed = path.parse(packageName);\n  if (parsed.dir) {\n    throw new UsageError(\n      `Invalid filename template \"${filenameTemplate}\". ` +\n      `Filename \"${packageName}\" should not contain a path`\n    );\n  }\n  if (!['.zip', '.xpi'].includes(parsed.ext)) {\n    throw new UsageError(\n      `Invalid filename template \"${filenameTemplate}\". ` +\n      `Filename \"${packageName}\" should have a zip or xpi extension`\n    );\n  }\n\n  return packageName;\n}\n\nexport type PackageCreatorFn =\n    (params: PackageCreatorParams) => Promise<ExtensionBuildResult>;\n\nexport async function defaultPackageCreator(\n  {\n    manifestData,\n    sourceDir,\n    fileFilter,\n    artifactsDir,\n    overwriteDest,\n    showReadyMessage,\n    filename = DEFAULT_FILENAME_TEMPLATE,\n  }: PackageCreatorParams,\n  {\n    fromEvent = defaultFromEvent,\n  }: PackageCreatorOptions = {}\n): Promise<ExtensionBuildResult> {\n  let id;\n  if (manifestData) {\n    id = getManifestId(manifestData);\n    log.debug(`Using manifest id=${id || '[not specified]'}`);\n  } else {\n    manifestData = await getValidatedManifest(sourceDir);\n  }\n\n  const buffer = await zipDir(sourceDir, {\n    filter: (...args) => fileFilter.wantFile(...args),\n  });\n\n  let filenameTemplate = filename;\n\n  let {default_locale} = manifestData;\n  if (default_locale) {\n    default_locale = default_locale.replace(/-/g, '_');\n    const messageFile = path.join(\n      sourceDir, '_locales',\n      default_locale, 'messages.json'\n    );\n    log.debug('Manifest declared default_locale, localizing extension name');\n    const extensionName = await getDefaultLocalizedName({\n      messageFile, manifestData,\n    });\n    // allow for a localized `{name}`, without mutating `manifestData`\n    filenameTemplate = filenameTemplate.replace(/{name}/g, extensionName);\n  }\n\n  const packageName = safeFileName(\n    getPackageNameFromTemplate(filenameTemplate, manifestData)\n  );\n  const extensionPath = path.join(artifactsDir, packageName);\n\n  // Added 'wx' flags to avoid overwriting of existing package.\n  const stream = createWriteStream(extensionPath, {flags: 'wx'});\n\n  stream.write(buffer, () => {\n    stream.end();\n  });\n\n  try {\n    await fromEvent(stream, 'close');\n  } catch (error) {\n    if (!isErrorWithCode('EEXIST', error)) {\n      throw error;\n    }\n    if (!overwriteDest) {\n      throw new UsageError(\n        `Extension exists at the destination path: ${extensionPath}\\n` +\n        'Use --overwrite-dest to enable overwriting.');\n    }\n    log.info(`Destination exists, overwriting: ${extensionPath}`);\n    const overwriteStream = createWriteStream(extensionPath);\n    overwriteStream.write(buffer, () => {\n      overwriteStream.end();\n    });\n    await fromEvent(overwriteStream, 'close');\n  }\n\n  if (showReadyMessage) {\n    log.info(`Your web extension is ready: ${extensionPath}`);\n  }\n  return {extensionPath};\n}\n\n\n// Build command types and implementation.\n\nexport type BuildCmdParams = {|\n  sourceDir: string,\n  artifactsDir: string,\n  asNeeded?: boolean,\n  overwriteDest?: boolean,\n  ignoreFiles?: Array<string>,\n  filename?: string,\n|};\n\nexport type BuildCmdOptions = {\n  manifestData?: ExtensionManifest,\n  fileFilter?: FileFilter,\n  onSourceChange?: OnSourceChangeFn,\n  packageCreator?: PackageCreatorFn,\n  showReadyMessage?: boolean,\n  createFileFilter?: FileFilterCreatorFn,\n  shouldExitProgram?: boolean,\n};\n\nexport default async function build(\n  {\n    sourceDir,\n    artifactsDir,\n    asNeeded = false,\n    overwriteDest = false,\n    ignoreFiles = [],\n    filename = DEFAULT_FILENAME_TEMPLATE,\n  }: BuildCmdParams,\n  {\n    manifestData,\n    createFileFilter = defaultFileFilterCreator,\n    fileFilter = createFileFilter({\n      sourceDir,\n      artifactsDir,\n      ignoreFiles,\n    }),\n    onSourceChange = defaultSourceWatcher,\n    packageCreator = defaultPackageCreator,\n    showReadyMessage = true,\n  }: BuildCmdOptions = {}\n): Promise<ExtensionBuildResult> {\n\n  const rebuildAsNeeded = asNeeded; // alias for `build --as-needed`\n  log.info(`Building web extension from ${sourceDir}`);\n\n  const createPackage = () => packageCreator({\n    manifestData,\n    sourceDir,\n    fileFilter,\n    artifactsDir,\n    overwriteDest,\n    showReadyMessage,\n    filename,\n  });\n\n  await prepareArtifactsDir(artifactsDir);\n  const result = await createPackage();\n\n  if (rebuildAsNeeded) {\n    log.info('Rebuilding when files change...');\n    onSourceChange({\n      sourceDir,\n      artifactsDir,\n      onChange: () => {\n        return createPackage().catch((error) => {\n          log.error(error.stack);\n          throw error;\n        });\n      },\n      shouldWatchFile: (...args) => fileFilter.wantFile(...args),\n    });\n  }\n\n  return result;\n}\n"],"mappings":"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"}