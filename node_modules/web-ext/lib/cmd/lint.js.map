{"version":3,"file":"lint.js","names":["createInstance","defaultLinterCreator","createLogger","createFileFilter","defaultFileFilterCreator","log","import","meta","url","lint","artifactsDir","boring","ignoreFiles","metadata","output","pretty","privileged","sourceDir","selfHosted","verbose","warningsAsErrors","createLinter","shouldExitProgram","fileFilter","debug","linter","config","logLevel","stack","Boolean","shouldScanFile","fileName","wantFile","_","runAsBinary","run"],"sources":["../../src/cmd/lint.js"],"sourcesContent":["/* @flow */\nimport {createInstance as defaultLinterCreator} from 'addons-linter';\n\nimport {createLogger} from '../util/logger.js';\nimport {\n  createFileFilter as defaultFileFilterCreator,\n} from '../util/file-filter.js';\n// import flow types\nimport type {FileFilterCreatorFn} from '../util/file-filter.js';\n\nconst log = createLogger(import.meta.url);\n\n\n// Define the needed 'addons-linter' module flow types.\n\nexport type LinterOutputType = 'text' | 'json';\n\nexport type LinterCreatorParams = {|\n  config: {|\n    logLevel: 'debug' | 'fatal',\n    stack: boolean,\n    pretty?: boolean,\n    warningsAsErrors?: boolean,\n    metadata?: boolean,\n    output?: LinterOutputType,\n    privileged?: boolean,\n    boring?: boolean,\n    selfHosted?: boolean,\n    shouldScanFile: (fileName: string) => boolean,\n    _: Array<string>,\n  |},\n  runAsBinary: boolean,\n|};\n\nexport type Linter = {|\n  run: () => Promise<void>,\n|};\n\nexport type LinterCreatorFn = (params: LinterCreatorParams) => Linter;\n\n\n// Lint command types and implementation.\n\nexport type LintCmdParams = {|\n  artifactsDir?: string,\n  boring?: boolean,\n  ignoreFiles?: Array<string>,\n  metadata?: boolean,\n  output?: LinterOutputType,\n  pretty?: boolean,\n  privileged?: boolean,\n  selfHosted?: boolean,\n  sourceDir: string,\n  verbose?: boolean,\n  warningsAsErrors?: boolean,\n|};\n\nexport type LintCmdOptions = {\n  createLinter?: LinterCreatorFn,\n  createFileFilter?: FileFilterCreatorFn,\n  shouldExitProgram?: boolean,\n};\n\nexport default function lint(\n  {\n    artifactsDir,\n    boring,\n    ignoreFiles,\n    metadata,\n    output,\n    pretty,\n    privileged,\n    sourceDir,\n    selfHosted,\n    verbose,\n    warningsAsErrors,\n  }: LintCmdParams,\n  {\n    createLinter = defaultLinterCreator,\n    createFileFilter = defaultFileFilterCreator,\n    shouldExitProgram = true,\n  }: LintCmdOptions = {}\n): Promise<void> {\n  const fileFilter = createFileFilter({sourceDir, ignoreFiles, artifactsDir});\n\n  log.debug(`Running addons-linter on ${sourceDir}`);\n  const linter = createLinter({\n    config: {\n      logLevel: verbose ? 'debug' : 'fatal',\n      stack: Boolean(verbose),\n      pretty,\n      privileged,\n      warningsAsErrors,\n      metadata,\n      output,\n      boring,\n      selfHosted,\n      shouldScanFile: (fileName) => fileFilter.wantFile(fileName),\n      // This mimics the first command line argument from yargs,\n      // which should be the directory to the extension.\n      _: [sourceDir],\n    },\n    runAsBinary: shouldExitProgram,\n  });\n  return linter.run();\n}\n"],"mappings":"AACA,SAAQA,cAAc,IAAIC,oBAA1B,QAAqD,eAArD;AAEA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SACEC,gBAAgB,IAAIC,wBADtB,QAEO,wBAFP,C,CAGA;;AAGA,MAAMC,GAAG,GAAGH,YAAY,CAACI,MAAM,CAACC,IAAP,CAAYC,GAAb,CAAxB,C,CAGA;;AAkDA,eAAe,SAASC,IAAT,CACb;EACEC,YADF;EAEEC,MAFF;EAGEC,WAHF;EAIEC,QAJF;EAKEC,MALF;EAMEC,MANF;EAOEC,UAPF;EAQEC,SARF;EASEC,UATF;EAUEC,OAVF;EAWEC;AAXF,CADa,EAcb;EACEC,YAAY,GAAGpB,oBADjB;EAEEE,gBAAgB,GAAGC,wBAFrB;EAGEkB,iBAAiB,GAAG;AAHtB,IAIoB,EAlBP,EAmBE;EACf,MAAMC,UAAU,GAAGpB,gBAAgB,CAAC;IAACc,SAAD;IAAYL,WAAZ;IAAyBF;EAAzB,CAAD,CAAnC;EAEAL,GAAG,CAACmB,KAAJ,CAAW,4BAA2BP,SAAU,EAAhD;EACA,MAAMQ,MAAM,GAAGJ,YAAY,CAAC;IAC1BK,MAAM,EAAE;MACNC,QAAQ,EAAER,OAAO,GAAG,OAAH,GAAa,OADxB;MAENS,KAAK,EAAEC,OAAO,CAACV,OAAD,CAFR;MAGNJ,MAHM;MAINC,UAJM;MAKNI,gBALM;MAMNP,QANM;MAONC,MAPM;MAQNH,MARM;MASNO,UATM;MAUNY,cAAc,EAAGC,QAAD,IAAcR,UAAU,CAACS,QAAX,CAAoBD,QAApB,CAVxB;MAWN;MACA;MACAE,CAAC,EAAE,CAAChB,SAAD;IAbG,CADkB;IAgB1BiB,WAAW,EAAEZ;EAhBa,CAAD,CAA3B;EAkBA,OAAOG,MAAM,CAACU,GAAP,EAAP;AACD"}